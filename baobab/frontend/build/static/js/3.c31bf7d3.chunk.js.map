{"version":3,"sources":["../node_modules/react-node-resolver/lib/index.js","../node_modules/react-node-resolver/lib/NodeResolver.js","../node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js","../../../src/utils/isBrowser.js","../../../src/utils/debounce.js","../../../src/utils/isFunction.js","../../../src/utils/getStyleComputedProperty.js","../../../src/utils/getParentNode.js","../../../src/utils/getScrollParent.js","../../../src/utils/getReferenceNode.js","../../../src/utils/isIE.js","../../../src/utils/getOffsetParent.js","../../../src/utils/getRoot.js","../../../src/utils/findCommonOffsetParent.js","../../../src/utils/isOffsetContainer.js","../../../src/utils/getScroll.js","../../../src/utils/includeScroll.js","../../../src/utils/getBordersSize.js","../../../src/utils/getWindowSizes.js","../../../src/utils/getClientRect.js","../../../src/utils/getBoundingClientRect.js","../../../src/utils/getOffsetRectRelativeToArbitraryNode.js","../../../src/utils/getViewportOffsetRectRelativeToArtbitraryNode.js","../../../src/utils/isFixed.js","../../../src/utils/getFixedPositionOffsetParent.js","../../../src/utils/getBoundaries.js","../../../src/utils/computeAutoPlacement.js","../../../src/utils/getReferenceOffsets.js","../../../src/utils/getOuterSizes.js","../../../src/utils/getOppositePlacement.js","../../../src/utils/getPopperOffsets.js","../../../src/utils/find.js","../../../src/utils/runModifiers.js","../../../src/utils/findIndex.js","../../../src/methods/update.js","../../../src/utils/isModifierEnabled.js","../../../src/utils/getSupportedPropertyName.js","../../../src/methods/destroy.js","../../../src/utils/getWindow.js","../../../src/utils/setupEventListeners.js","../../../src/methods/enableEventListeners.js","../../../src/methods/disableEventListeners.js","../../../src/utils/removeEventListeners.js","../../../src/utils/isNumeric.js","../../../src/utils/setStyles.js","../../../src/modifiers/computeStyle.js","../../../src/utils/isModifierRequired.js","../../../src/methods/placements.js","../../../src/utils/clockwise.js","../../../src/modifiers/flip.js","../../../src/modifiers/offset.js","../../../src/modifiers/index.js","../../../src/methods/defaults.js","../../../src/modifiers/shift.js","../../../src/modifiers/preventOverflow.js","../../../src/modifiers/keepTogether.js","../../../src/modifiers/arrow.js","../../../src/utils/getOppositeVariation.js","../../../src/modifiers/inner.js","../../../src/modifiers/hide.js","../../../src/utils/getRoundedOffsets.js","../../../src/modifiers/applyStyle.js","../../../src/utils/setAttributes.js","../../../src/index.js","../node_modules/create-react-context/lib/index.js","../node_modules/create-react-context/lib/implementation.js","../node_modules/react-popper/lib/esm/Manager.js","../node_modules/react-popper/lib/esm/utils.js","../node_modules/react-popper/lib/esm/Popper.js","../../../src/Popper.tsx","../node_modules/react-popper/lib/esm/Reference.js","../../../../src/InlineDialog/styled.ts","../../../../src/InlineDialog/index.tsx"],"names":["Object","defineProperty","exports","value","_NodeResolver","require","enumerable","get","obj","__esModule","default","_createClass","defineProperties","target","props","i","length","descriptor","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_react","_reactDom","_classCallCheck","instance","TypeError","_possibleConstructorReturn","self","call","ReferenceError","NodeResolver","_Component","this","__proto__","getPrototypeOf","apply","arguments","subClass","superClass","create","constructor","setPrototypeOf","_inherits","innerRef","findDOMNode","children","Component","module","source","excluded","sourceKeys","keys","indexOf","window","document","navigator","timeoutDuration","longerTimeoutBrowsers","isBrowser","fn","called","scheduled","isFunction","functionToCheck","getType","getStyleComputedProperty","element","property","css","getParentNode","getScrollParent","overflow","overflowX","overflowY","test","getReferenceNode","reference","isIE11","isIE10","isIE","version","getOffsetParent","noOffsetParent","offsetParent","nodeName","getRoot","node","findCommonOffsetParent","element1","element2","order","Node","start","end","range","commonAncestorContainer","isOffsetContainer","element1root","getScroll","side","upperSide","html","scrollingElement","includeScroll","rect","subtract","scrollTop","scrollLeft","modifier","getBordersSize","styles","axis","sideA","sideB","parseFloat","getSize","body","computedStyle","Math","parseInt","getWindowSizes","getComputedStyle","getClientRect","offsets","height","getBoundingClientRect","result","top","sizes","width","horizScrollbar","vertScrollbar","getOffsetRectRelativeToArbitraryNode","parent","fixedPosition","runIsIE","isHTML","childrenRect","parentRect","scrollParent","borderTopWidth","borderLeftWidth","marginTop","marginLeft","getViewportOffsetRectRelativeToArtbitraryNode","excludeScroll","relativeOffset","offset","isFixed","parentNode","getFixedPositionOffsetParent","el","getBoundaries","boundaries","left","boundariesElement","boundariesNode","popper","isPaddingNumber","padding","getArea","computeAutoPlacement","placement","rects","refRect","bottom","sortedAreas","b","a","filteredAreas","filter","computedPlacement","variation","getReferenceOffsets","state","commonOffsetParent","getOuterSizes","x","y","getOppositePlacement","hash","right","replace","matched","getPopperOffsets","referenceOffsets","popperRect","popperOffsets","isHoriz","mainSide","secondarySide","measurement","secondaryMeasurement","find","arr","check","Array","runModifiers","modifiers","data","ends","prop","findIndex","cur","match","update","options","flip","positionFixed","isModifierEnabled","modifierName","some","name","getSupportedPropertyName","prefixes","upperProp","prefix","toCheck","destroy","getWindow","ownerDocument","setupEventListeners","passive","scrollElement","attachToScrollParents","event","callback","scrollParents","isBody","enableEventListeners","disableEventListeners","removeEventListeners","isNumeric","n","isNaN","isFinite","setStyles","unit","isFirefox","isModifierRequired","requesting","isRequired","requested","validPlacements","placements","clockwise","counter","index","BEHAVIORS","parseOffset","useHeight","basePlacement","fragments","split","map","frag","divider","splitRegex","ops","mergeWithPrevious","op","str","size","toValue","index2","shiftvariation","isVertical","shiftOffsets","transformProp","popperStyles","transform","floor","opSide","arrowElement","len","sideCapitalized","altSide","arrowElementSize","center","popperMarginSide","popperBorderSide","sideValue","placementOpposite","flipOrder","refOffsets","overlapsRef","overflowsLeft","overflowsRight","overflowsTop","overflowsBottom","overflowsBoundaries","flippedVariationByRef","flippedVariationByContent","flippedVariation","getOppositeVariation","subtractLength","bound","legacyGpuAccelerationOption","gpuAcceleration","offsetParentRect","position","shouldRound","round","noRound","v","referenceWidth","popperWidth","isVariation","horizontalToInteger","verticalToInteger","bothOddWidth","getRoundedOffsets","prefixedProperty","invertTop","invertLeft","attributes","undefined","Popper","requestAnimationFrame","debounce","bind","modifierOptions","eventsEnabled","Utils","PopperUtils","Defaults","_react2","_interopRequireDefault","_implementation2","createContext","_propTypes2","_gud2","createEventEmitter","handlers","on","handler","push","off","h","set","newValue","changedBits","forEach","defaultValue","calculateChangedBits","_Provider$childContex","_Consumer$contextType","contextProp","Provider","_temp","_this","_len","args","_key","concat","emitter","getChildContext","_ref","componentWillReceiveProps","nextProps","oldValue","render","childContextTypes","object","Consumer","_Component2","_temp2","_this2","_len2","_key2","getValue","onUpdate","observedBits","setState","componentDidMount","context","componentWillUnmount","isArray","contextTypes","ManagerReferenceNodeContext","ManagerReferenceNodeSetterContext","Manager","_React$Component","_defineProperty","_assertThisInitialized","newReferenceNode","referenceNode","forceUpdate","_inheritsLoose","_proto","React","setReferenceNode","unwrapArray","arg","safeInvoke","setRef","ref","current","initialStyle","opacity","pointerEvents","initialArrowStyle","InnerPopper","popperNode","updatePopperInstance","arrowNode","enabled","_extends","arrow","applyStyle","updateStateModifier","arrowStyles","hide","popperInstance","destroyPopperInstance","referenceElement","PopperJS","getOptions","scheduleUpdate","componentDidUpdate","prevProps","prevState","setPopperNode","style","getPopperStyle","getPopperPlacement","outOfBoundaries","getOutOfBoundariesState","arrowProps","setArrowNode","getArrowStyle","_objectWithoutPropertiesLoose","InnerReference","warning","Boolean","refHandler","Reference"],"mappings":"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","file":"static/js/3.c31bf7d3.chunk.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _NodeResolver = require('./NodeResolver');\n\nObject.defineProperty(exports, 'default', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_NodeResolver).default;\n  }\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _reactDom = require('react-dom');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar NodeResolver = function (_Component) {\n  _inherits(NodeResolver, _Component);\n\n  function NodeResolver() {\n    _classCallCheck(this, NodeResolver);\n\n    return _possibleConstructorReturn(this, (NodeResolver.__proto__ || Object.getPrototypeOf(NodeResolver)).apply(this, arguments));\n  }\n\n  _createClass(NodeResolver, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.props.innerRef((0, _reactDom.findDOMNode)(this));\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.props.innerRef(null);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return this.props.children;\n    }\n  }]);\n\n  return NodeResolver;\n}(_react.Component);\n\nexports.default = NodeResolver;","function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutPropertiesLoose;","export default typeof window !== 'undefined' && typeof document !== 'undefined' && typeof navigator !== 'undefined';\n","import isBrowser from './isBrowser';\n\nconst timeoutDuration = (function(){\n  const longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];\n  for (let i = 0; i < longerTimeoutBrowsers.length; i += 1) {\n    if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {\n      return 1;\n    }\n  }\n  return 0;\n}());\n\nexport function microtaskDebounce(fn) {\n  let called = false\n  return () => {\n    if (called) {\n      return\n    }\n    called = true\n    window.Promise.resolve().then(() => {\n      called = false\n      fn()\n    })\n  }\n}\n\nexport function taskDebounce(fn) {\n  let scheduled = false;\n  return () => {\n    if (!scheduled) {\n      scheduled = true;\n      setTimeout(() => {\n        scheduled = false;\n        fn();\n      }, timeoutDuration);\n    }\n  };\n}\n\nconst supportsMicroTasks = isBrowser && window.Promise\n\n\n/**\n* Create a debounced version of a method, that's asynchronously deferred\n* but called in the minimum time possible.\n*\n* @method\n* @memberof Popper.Utils\n* @argument {Function} fn\n* @returns {Function}\n*/\nexport default (supportsMicroTasks\n  ? microtaskDebounce\n  : taskDebounce);\n","/**\n * Check if the given variable is a function\n * @method\n * @memberof Popper.Utils\n * @argument {Any} functionToCheck - variable to check\n * @returns {Boolean} answer to: is a function?\n */\nexport default function isFunction(functionToCheck) {\n  const getType = {};\n  return (\n    functionToCheck &&\n    getType.toString.call(functionToCheck) === '[object Function]'\n  );\n}\n","/**\n * Get CSS computed property of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Eement} element\n * @argument {String} property\n */\nexport default function getStyleComputedProperty(element, property) {\n  if (element.nodeType !== 1) {\n    return [];\n  }\n  // NOTE: 1 DOM access here\n  const window = element.ownerDocument.defaultView;\n  const css = window.getComputedStyle(element, null);\n  return property ? css[property] : css;\n}\n","/**\n * Returns the parentNode or the host of the element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} parent\n */\nexport default function getParentNode(element) {\n  if (element.nodeName === 'HTML') {\n    return element;\n  }\n  return element.parentNode || element.host;\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getParentNode from './getParentNode';\n\n/**\n * Returns the scrolling parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} scroll parent\n */\nexport default function getScrollParent(element) {\n  // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n  if (!element) {\n    return document.body\n  }\n\n  switch (element.nodeName) {\n    case 'HTML':\n    case 'BODY':\n      return element.ownerDocument.body\n    case '#document':\n      return element.body\n  }\n\n  // Firefox want us to check `-x` and `-y` variations as well\n  const { overflow, overflowX, overflowY } = getStyleComputedProperty(element);\n  if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {\n    return element;\n  }\n\n  return getScrollParent(getParentNode(element));\n}\n","/**\n * Returns the reference node of the reference object, or the reference object itself.\n * @method\n * @memberof Popper.Utils\n * @param {Element|Object} reference - the reference element (the popper will be relative to this)\n * @returns {Element} parent\n */\nexport default function getReferenceNode(reference) {\n  return reference && reference.referenceNode ? reference.referenceNode : reference;\n}\n","import isBrowser from './isBrowser';\n\nconst isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);\nconst isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);\n\n/**\n * Determines if the browser is Internet Explorer\n * @method\n * @memberof Popper.Utils\n * @param {Number} version to check\n * @returns {Boolean} isIE\n */\nexport default function isIE(version) {\n  if (version === 11) {\n    return isIE11;\n  }\n  if (version === 10) {\n    return isIE10;\n  }\n  return isIE11 || isIE10;\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport isIE from './isIE';\n/**\n * Returns the offset parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} offset parent\n */\nexport default function getOffsetParent(element) {\n  if (!element) {\n    return document.documentElement;\n  }\n\n  const noOffsetParent = isIE(10) ? document.body : null;\n\n  // NOTE: 1 DOM access here\n  let offsetParent = element.offsetParent || null;\n  // Skip hidden elements which don't have an offsetParent\n  while (offsetParent === noOffsetParent && element.nextElementSibling) {\n    offsetParent = (element = element.nextElementSibling).offsetParent;\n  }\n\n  const nodeName = offsetParent && offsetParent.nodeName;\n\n  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\n    return element ? element.ownerDocument.documentElement : document.documentElement;\n  }\n\n  // .offsetParent will return the closest TH, TD or TABLE in case\n  // no offsetParent is present, I hate this job...\n  if (\n    ['TH', 'TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 &&\n    getStyleComputedProperty(offsetParent, 'position') === 'static'\n  ) {\n    return getOffsetParent(offsetParent);\n  }\n\n  return offsetParent;\n}\n","/**\n * Finds the root node (document, shadowDOM root) of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} node\n * @returns {Element} root node\n */\nexport default function getRoot(node) {\n  if (node.parentNode !== null) {\n    return getRoot(node.parentNode);\n  }\n\n  return node;\n}\n","import isOffsetContainer from './isOffsetContainer';\nimport getRoot from './getRoot';\nimport getOffsetParent from './getOffsetParent';\n\n/**\n * Finds the offset parent common to the two provided nodes\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element1\n * @argument {Element} element2\n * @returns {Element} common offset parent\n */\nexport default function findCommonOffsetParent(element1, element2) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\n    return document.documentElement;\n  }\n\n  // Here we make sure to give as \"start\" the element that comes first in the DOM\n  const order =\n    element1.compareDocumentPosition(element2) &\n    Node.DOCUMENT_POSITION_FOLLOWING;\n  const start = order ? element1 : element2;\n  const end = order ? element2 : element1;\n\n  // Get common ancestor container\n  const range = document.createRange();\n  range.setStart(start, 0);\n  range.setEnd(end, 0);\n  const { commonAncestorContainer } = range;\n\n  // Both nodes are inside #document\n  if (\n    (element1 !== commonAncestorContainer &&\n      element2 !== commonAncestorContainer) ||\n    start.contains(end)\n  ) {\n    if (isOffsetContainer(commonAncestorContainer)) {\n      return commonAncestorContainer;\n    }\n\n    return getOffsetParent(commonAncestorContainer);\n  }\n\n  // one of the nodes is inside shadowDOM, find which one\n  const element1root = getRoot(element1);\n  if (element1root.host) {\n    return findCommonOffsetParent(element1root.host, element2);\n  } else {\n    return findCommonOffsetParent(element1, getRoot(element2).host);\n  }\n}\n","import getOffsetParent from './getOffsetParent';\n\nexport default function isOffsetContainer(element) {\n  const { nodeName } = element;\n  if (nodeName === 'BODY') {\n    return false;\n  }\n  return (\n    nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element\n  );\n}\n","/**\n * Gets the scroll value of the given element in the given side (top and left)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {String} side `top` or `left`\n * @returns {number} amount of scrolled pixels\n */\nexport default function getScroll(element, side = 'top') {\n  const upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\n  const nodeName = element.nodeName;\n\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    const html = element.ownerDocument.documentElement;\n    const scrollingElement = element.ownerDocument.scrollingElement || html;\n    return scrollingElement[upperSide];\n  }\n\n  return element[upperSide];\n}\n","import getScroll from './getScroll';\n\n/*\n * Sum or subtract the element scroll values (left and top) from a given rect object\n * @method\n * @memberof Popper.Utils\n * @param {Object} rect - Rect object you want to change\n * @param {HTMLElement} element - The element from the function reads the scroll values\n * @param {Boolean} subtract - set to true if you want to subtract the scroll values\n * @return {Object} rect - The modifier rect object\n */\nexport default function includeScroll(rect, element, subtract = false) {\n  const scrollTop = getScroll(element, 'top');\n  const scrollLeft = getScroll(element, 'left');\n  const modifier = subtract ? -1 : 1;\n  rect.top += scrollTop * modifier;\n  rect.bottom += scrollTop * modifier;\n  rect.left += scrollLeft * modifier;\n  rect.right += scrollLeft * modifier;\n  return rect;\n}\n","/*\n * Helper to detect borders of a given element\n * @method\n * @memberof Popper.Utils\n * @param {CSSStyleDeclaration} styles\n * Result of `getStyleComputedProperty` on the given element\n * @param {String} axis - `x` or `y`\n * @return {number} borders - The borders size of the given axis\n */\n\nexport default function getBordersSize(styles, axis) {\n  const sideA = axis === 'x' ? 'Left' : 'Top';\n  const sideB = sideA === 'Left' ? 'Right' : 'Bottom';\n\n  return (\n    parseFloat(styles[`border${sideA}Width`]) +\n    parseFloat(styles[`border${sideB}Width`])\n  );\n}\n","import isIE from './isIE';\n\nfunction getSize(axis, body, html, computedStyle) {\n  return Math.max(\n    body[`offset${axis}`],\n    body[`scroll${axis}`],\n    html[`client${axis}`],\n    html[`offset${axis}`],\n    html[`scroll${axis}`],\n    isIE(10)\n      ? (parseInt(html[`offset${axis}`]) + \n      parseInt(computedStyle[`margin${axis === 'Height' ? 'Top' : 'Left'}`]) + \n      parseInt(computedStyle[`margin${axis === 'Height' ? 'Bottom' : 'Right'}`]))\n    : 0 \n  );\n}\n\nexport default function getWindowSizes(document) {\n  const body = document.body;\n  const html = document.documentElement;\n  const computedStyle = isIE(10) && getComputedStyle(html);\n\n  return {\n    height: getSize('Height', body, html, computedStyle),\n    width: getSize('Width', body, html, computedStyle),\n  };\n}\n","/**\n * Given element offsets, generate an output similar to getBoundingClientRect\n * @method\n * @memberof Popper.Utils\n * @argument {Object} offsets\n * @returns {Object} ClientRect like output\n */\nexport default function getClientRect(offsets) {\n  return {\n    ...offsets,\n    right: offsets.left + offsets.width,\n    bottom: offsets.top + offsets.height,\n  };\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getBordersSize from './getBordersSize';\nimport getWindowSizes from './getWindowSizes';\nimport getScroll from './getScroll';\nimport getClientRect from './getClientRect';\nimport isIE from './isIE';\n\n/**\n * Get bounding client rect of given element\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} element\n * @return {Object} client rect\n */\nexport default function getBoundingClientRect(element) {\n  let rect = {};\n\n  // IE10 10 FIX: Please, don't ask, the element isn't\n  // considered in DOM in some circumstances...\n  // This isn't reproducible in IE10 compatibility mode of IE11\n  try {\n    if (isIE(10)) {\n      rect = element.getBoundingClientRect();\n      const scrollTop = getScroll(element, 'top');\n      const scrollLeft = getScroll(element, 'left');\n      rect.top += scrollTop;\n      rect.left += scrollLeft;\n      rect.bottom += scrollTop;\n      rect.right += scrollLeft;\n    }\n    else {\n      rect = element.getBoundingClientRect();\n    }\n  }\n  catch(e){}\n\n  const result = {\n    left: rect.left,\n    top: rect.top,\n    width: rect.right - rect.left,\n    height: rect.bottom - rect.top,\n  };\n\n  // subtract scrollbar size from sizes\n  const sizes = element.nodeName === 'HTML' ? getWindowSizes(element.ownerDocument) : {};\n  const width =\n    sizes.width || element.clientWidth || result.width;\n  const height =\n    sizes.height || element.clientHeight || result.height;\n\n  let horizScrollbar = element.offsetWidth - width;\n  let vertScrollbar = element.offsetHeight - height;\n\n  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\n  // we make this check conditional for performance reasons\n  if (horizScrollbar || vertScrollbar) {\n    const styles = getStyleComputedProperty(element);\n    horizScrollbar -= getBordersSize(styles, 'x');\n    vertScrollbar -= getBordersSize(styles, 'y');\n\n    result.width -= horizScrollbar;\n    result.height -= vertScrollbar;\n  }\n\n  return getClientRect(result);\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport includeScroll from './includeScroll';\nimport getScrollParent from './getScrollParent';\nimport getBoundingClientRect from './getBoundingClientRect';\nimport runIsIE from './isIE';\nimport getClientRect from './getClientRect';\n\nexport default function getOffsetRectRelativeToArbitraryNode(children, parent, fixedPosition = false) {\n  const isIE10 = runIsIE(10);\n  const isHTML = parent.nodeName === 'HTML';\n  const childrenRect = getBoundingClientRect(children);\n  const parentRect = getBoundingClientRect(parent);\n  const scrollParent = getScrollParent(children);\n\n  const styles = getStyleComputedProperty(parent);\n  const borderTopWidth = parseFloat(styles.borderTopWidth);\n  const borderLeftWidth = parseFloat(styles.borderLeftWidth);\n\n  // In cases where the parent is fixed, we must ignore negative scroll in offset calc\n  if(fixedPosition && isHTML) {\n    parentRect.top = Math.max(parentRect.top, 0);\n    parentRect.left = Math.max(parentRect.left, 0);\n  }\n  let offsets = getClientRect({\n    top: childrenRect.top - parentRect.top - borderTopWidth,\n    left: childrenRect.left - parentRect.left - borderLeftWidth,\n    width: childrenRect.width,\n    height: childrenRect.height,\n  });\n  offsets.marginTop = 0;\n  offsets.marginLeft = 0;\n\n  // Subtract margins of documentElement in case it's being used as parent\n  // we do this only on HTML because it's the only element that behaves\n  // differently when margins are applied to it. The margins are included in\n  // the box of the documentElement, in the other cases not.\n  if (!isIE10 && isHTML) {\n    const marginTop = parseFloat(styles.marginTop);\n    const marginLeft = parseFloat(styles.marginLeft);\n\n    offsets.top -= borderTopWidth - marginTop;\n    offsets.bottom -= borderTopWidth - marginTop;\n    offsets.left -= borderLeftWidth - marginLeft;\n    offsets.right -= borderLeftWidth - marginLeft;\n\n    // Attach marginTop and marginLeft because in some circumstances we may need them\n    offsets.marginTop = marginTop;\n    offsets.marginLeft = marginLeft;\n  }\n\n  if (\n    isIE10 && !fixedPosition\n      ? parent.contains(scrollParent)\n      : parent === scrollParent && scrollParent.nodeName !== 'BODY'\n  ) {\n    offsets = includeScroll(offsets, parent);\n  }\n\n  return offsets;\n}\n","import getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\nimport getScroll from './getScroll';\nimport getClientRect from './getClientRect';\n\nexport default function getViewportOffsetRectRelativeToArtbitraryNode(element, excludeScroll = false) {\n  const html = element.ownerDocument.documentElement;\n  const relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\n  const width = Math.max(html.clientWidth, window.innerWidth || 0);\n  const height = Math.max(html.clientHeight, window.innerHeight || 0);\n\n  const scrollTop = !excludeScroll ? getScroll(html) : 0;\n  const scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;\n\n  const offset = {\n    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,\n    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,\n    width,\n    height,\n  };\n\n  return getClientRect(offset);\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getParentNode from './getParentNode';\n\n/**\n * Check if the given element is fixed or is inside a fixed parent\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {Element} customContainer\n * @returns {Boolean} answer to \"isFixed?\"\n */\nexport default function isFixed(element) {\n  const nodeName = element.nodeName;\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    return false;\n  }\n  if (getStyleComputedProperty(element, 'position') === 'fixed') {\n    return true;\n  }\n  const parentNode = getParentNode(element);\n  if (!parentNode) {\n    return false;\n  }\n  return isFixed(parentNode);\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport isIE from './isIE';\n/**\n * Finds the first parent of an element that has a transformed property defined\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} first transformed parent or documentElement\n */\n\nexport default function getFixedPositionOffsetParent(element) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n   if (!element || !element.parentElement || isIE()) {\n    return document.documentElement;\n  }\n  let el = element.parentElement;\n  while (el && getStyleComputedProperty(el, 'transform') === 'none') {\n    el = el.parentElement;\n  }\n  return el || document.documentElement;\n\n}\n","import getScrollParent from './getScrollParent';\nimport getParentNode from './getParentNode';\nimport getReferenceNode from './getReferenceNode';\nimport findCommonOffsetParent from './findCommonOffsetParent';\nimport getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\nimport getViewportOffsetRectRelativeToArtbitraryNode from './getViewportOffsetRectRelativeToArtbitraryNode';\nimport getWindowSizes from './getWindowSizes';\nimport isFixed from './isFixed';\nimport getFixedPositionOffsetParent from './getFixedPositionOffsetParent';\n\n/**\n * Computed the boundaries limits and return them\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} popper\n * @param {HTMLElement} reference\n * @param {number} padding\n * @param {HTMLElement} boundariesElement - Element used to define the boundaries\n * @param {Boolean} fixedPosition - Is in fixed position mode\n * @returns {Object} Coordinates of the boundaries\n */\nexport default function getBoundaries(\n  popper,\n  reference,\n  padding,\n  boundariesElement,\n  fixedPosition = false\n) {\n  // NOTE: 1 DOM access here\n\n  let boundaries = { top: 0, left: 0 };\n  const offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference));\n\n  // Handle viewport case\n  if (boundariesElement === 'viewport' ) {\n    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);\n  }\n\n  else {\n    // Handle other cases based on DOM element used as boundaries\n    let boundariesNode;\n    if (boundariesElement === 'scrollParent') {\n      boundariesNode = getScrollParent(getParentNode(reference));\n      if (boundariesNode.nodeName === 'BODY') {\n        boundariesNode = popper.ownerDocument.documentElement;\n      }\n    } else if (boundariesElement === 'window') {\n      boundariesNode = popper.ownerDocument.documentElement;\n    } else {\n      boundariesNode = boundariesElement;\n    }\n\n    const offsets = getOffsetRectRelativeToArbitraryNode(\n      boundariesNode,\n      offsetParent,\n      fixedPosition\n    );\n\n    // In case of HTML, we need a different computation\n    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\n      const { height, width } = getWindowSizes(popper.ownerDocument);\n      boundaries.top += offsets.top - offsets.marginTop;\n      boundaries.bottom = height + offsets.top;\n      boundaries.left += offsets.left - offsets.marginLeft;\n      boundaries.right = width + offsets.left;\n    } else {\n      // for all the other DOM elements, this one is good\n      boundaries = offsets;\n    }\n  }\n\n  // Add paddings\n  padding = padding || 0;\n  const isPaddingNumber = typeof padding === 'number';\n  boundaries.left += isPaddingNumber ? padding : padding.left || 0; \n  boundaries.top += isPaddingNumber ? padding : padding.top || 0; \n  boundaries.right -= isPaddingNumber ? padding : padding.right || 0; \n  boundaries.bottom -= isPaddingNumber ? padding : padding.bottom || 0; \n\n  return boundaries;\n}\n","import getBoundaries from '../utils/getBoundaries';\n\nfunction getArea({ width, height }) {\n  return width * height;\n}\n\n/**\n * Utility used to transform the `auto` placement to the placement with more\n * available space.\n * @method\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function computeAutoPlacement(\n  placement,\n  refRect,\n  popper,\n  reference,\n  boundariesElement,\n  padding = 0\n) {\n  if (placement.indexOf('auto') === -1) {\n    return placement;\n  }\n\n  const boundaries = getBoundaries(\n    popper,\n    reference,\n    padding,\n    boundariesElement\n  );\n\n  const rects = {\n    top: {\n      width: boundaries.width,\n      height: refRect.top - boundaries.top,\n    },\n    right: {\n      width: boundaries.right - refRect.right,\n      height: boundaries.height,\n    },\n    bottom: {\n      width: boundaries.width,\n      height: boundaries.bottom - refRect.bottom,\n    },\n    left: {\n      width: refRect.left - boundaries.left,\n      height: boundaries.height,\n    },\n  };\n\n  const sortedAreas = Object.keys(rects)\n    .map(key => ({\n      key,\n      ...rects[key],\n      area: getArea(rects[key]),\n    }))\n    .sort((a, b) => b.area - a.area);\n\n  const filteredAreas = sortedAreas.filter(\n    ({ width, height }) =>\n      width >= popper.clientWidth && height >= popper.clientHeight\n  );\n\n  const computedPlacement = filteredAreas.length > 0\n    ? filteredAreas[0].key\n    : sortedAreas[0].key;\n\n  const variation = placement.split('-')[1];\n\n  return computedPlacement + (variation ? `-${variation}` : '');\n}\n","import findCommonOffsetParent from './findCommonOffsetParent';\nimport getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\nimport getFixedPositionOffsetParent from './getFixedPositionOffsetParent';\nimport getReferenceNode from './getReferenceNode';\n\n/**\n * Get offsets to the reference element\n * @method\n * @memberof Popper.Utils\n * @param {Object} state\n * @param {Element} popper - the popper element\n * @param {Element} reference - the reference element (the popper will be relative to this)\n * @param {Element} fixedPosition - is in fixed position mode\n * @returns {Object} An object containing the offsets which will be applied to the popper\n */\nexport default function getReferenceOffsets(state, popper, reference, fixedPosition = null) {\n  const commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference));\n  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);\n}\n","/**\n * Get the outer sizes of the given element (offset size + margins)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Object} object containing width and height properties\n */\nexport default function getOuterSizes(element) {\n  const window = element.ownerDocument.defaultView;\n  const styles = window.getComputedStyle(element);\n  const x = parseFloat(styles.marginTop || 0) + parseFloat(styles.marginBottom || 0);\n  const y = parseFloat(styles.marginLeft || 0) + parseFloat(styles.marginRight || 0);\n  const result = {\n    width: element.offsetWidth + y,\n    height: element.offsetHeight + x,\n  };\n  return result;\n}\n","/**\n * Get the opposite placement of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement\n * @returns {String} flipped placement\n */\nexport default function getOppositePlacement(placement) {\n  const hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };\n  return placement.replace(/left|right|bottom|top/g, matched => hash[matched]);\n}\n","import getOuterSizes from './getOuterSizes';\nimport getOppositePlacement from './getOppositePlacement';\n\n/**\n * Get offsets to the popper\n * @method\n * @memberof Popper.Utils\n * @param {Object} position - CSS position the Popper will get applied\n * @param {HTMLElement} popper - the popper element\n * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)\n * @param {String} placement - one of the valid placement options\n * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper\n */\nexport default function getPopperOffsets(popper, referenceOffsets, placement) {\n  placement = placement.split('-')[0];\n\n  // Get popper node sizes\n  const popperRect = getOuterSizes(popper);\n\n  // Add position, width and height to our offsets object\n  const popperOffsets = {\n    width: popperRect.width,\n    height: popperRect.height,\n  };\n\n  // depending by the popper placement we have to compute its offsets slightly differently\n  const isHoriz = ['right', 'left'].indexOf(placement) !== -1;\n  const mainSide = isHoriz ? 'top' : 'left';\n  const secondarySide = isHoriz ? 'left' : 'top';\n  const measurement = isHoriz ? 'height' : 'width';\n  const secondaryMeasurement = !isHoriz ? 'height' : 'width';\n\n  popperOffsets[mainSide] =\n    referenceOffsets[mainSide] +\n    referenceOffsets[measurement] / 2 -\n    popperRect[measurement] / 2;\n  if (placement === secondarySide) {\n    popperOffsets[secondarySide] =\n      referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];\n  } else {\n    popperOffsets[secondarySide] =\n      referenceOffsets[getOppositePlacement(secondarySide)];\n  }\n\n  return popperOffsets;\n}\n","/**\n * Mimics the `find` method of Array\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nexport default function find(arr, check) {\n  // use native find if supported\n  if (Array.prototype.find) {\n    return arr.find(check);\n  }\n\n  // use `filter` to obtain the same behavior of `find`\n  return arr.filter(check)[0];\n}\n","import isFunction from './isFunction';\nimport findIndex from './findIndex';\nimport getClientRect from '../utils/getClientRect';\n\n/**\n * Loop trough the list of modifiers and run them in order,\n * each of them will then edit the data object.\n * @method\n * @memberof Popper.Utils\n * @param {dataObject} data\n * @param {Array} modifiers\n * @param {String} ends - Optional modifier name used as stopper\n * @returns {dataObject}\n */\nexport default function runModifiers(modifiers, data, ends) {\n  const modifiersToRun = ends === undefined\n    ? modifiers\n    : modifiers.slice(0, findIndex(modifiers, 'name', ends));\n\n  modifiersToRun.forEach(modifier => {\n    if (modifier['function']) { // eslint-disable-line dot-notation\n      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');\n    }\n    const fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation\n    if (modifier.enabled && isFunction(fn)) {\n      // Add properties to offsets to make them a complete clientRect object\n      // we do this before each modifier to make sure the previous one doesn't\n      // mess with these values\n      data.offsets.popper = getClientRect(data.offsets.popper);\n      data.offsets.reference = getClientRect(data.offsets.reference);\n\n      data = fn(data, modifier);\n    }\n  });\n\n  return data;\n}\n","import find from './find';\n\n/**\n * Return the index of the matching object\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nexport default function findIndex(arr, prop, value) {\n  // use native findIndex if supported\n  if (Array.prototype.findIndex) {\n    return arr.findIndex(cur => cur[prop] === value);\n  }\n\n  // use `find` + `indexOf` if `findIndex` isn't supported\n  const match = find(arr, obj => obj[prop] === value);\n  return arr.indexOf(match);\n}\n","import computeAutoPlacement from '../utils/computeAutoPlacement';\nimport getReferenceOffsets from '../utils/getReferenceOffsets';\nimport getPopperOffsets from '../utils/getPopperOffsets';\nimport runModifiers from '../utils/runModifiers';\n\n/**\n * Updates the position of the popper, computing the new offsets and applying\n * the new style.<br />\n * Prefer `scheduleUpdate` over `update` because of performance reasons.\n * @method\n * @memberof Popper\n */\nexport default function update() {\n  // if popper is destroyed, don't perform any further update\n  if (this.state.isDestroyed) {\n    return;\n  }\n\n  let data = {\n    instance: this,\n    styles: {},\n    arrowStyles: {},\n    attributes: {},\n    flipped: false,\n    offsets: {},\n  };\n\n  // compute reference element offsets\n  data.offsets.reference = getReferenceOffsets(\n    this.state,\n    this.popper,\n    this.reference,\n    this.options.positionFixed\n  );\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  data.placement = computeAutoPlacement(\n    this.options.placement,\n    data.offsets.reference,\n    this.popper,\n    this.reference,\n    this.options.modifiers.flip.boundariesElement,\n    this.options.modifiers.flip.padding\n  );\n\n  // store the computed placement inside `originalPlacement`\n  data.originalPlacement = data.placement;\n\n  data.positionFixed = this.options.positionFixed;\n\n  // compute the popper offsets\n  data.offsets.popper = getPopperOffsets(\n    this.popper,\n    data.offsets.reference,\n    data.placement\n  );\n\n  data.offsets.popper.position = this.options.positionFixed\n    ? 'fixed'\n    : 'absolute';\n\n  // run the modifiers\n  data = runModifiers(this.modifiers, data);\n\n  // the first `update` will call `onCreate` callback\n  // the other ones will call `onUpdate` callback\n  if (!this.state.isCreated) {\n    this.state.isCreated = true;\n    this.options.onCreate(data);\n  } else {\n    this.options.onUpdate(data);\n  }\n}\n","/**\n * Helper used to know if the given modifier is enabled.\n * @method\n * @memberof Popper.Utils\n * @returns {Boolean}\n */\nexport default function isModifierEnabled(modifiers, modifierName) {\n  return modifiers.some(\n    ({ name, enabled }) => enabled && name === modifierName\n  );\n}\n","/**\n * Get the prefixed supported property name\n * @method\n * @memberof Popper.Utils\n * @argument {String} property (camelCase)\n * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)\n */\nexport default function getSupportedPropertyName(property) {\n  const prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];\n  const upperProp = property.charAt(0).toUpperCase() + property.slice(1);\n\n  for (let i = 0; i < prefixes.length; i++) {\n    const prefix = prefixes[i];\n    const toCheck = prefix ? `${prefix}${upperProp}` : property;\n    if (typeof document.body.style[toCheck] !== 'undefined') {\n      return toCheck;\n    }\n  }\n  return null;\n}\n","import isModifierEnabled from '../utils/isModifierEnabled';\nimport getSupportedPropertyName from '../utils/getSupportedPropertyName';\n\n/**\n * Destroys the popper.\n * @method\n * @memberof Popper\n */\nexport default function destroy() {\n  this.state.isDestroyed = true;\n\n  // touch DOM only if `applyStyle` modifier is enabled\n  if (isModifierEnabled(this.modifiers, 'applyStyle')) {\n    this.popper.removeAttribute('x-placement');\n    this.popper.style.position = '';\n    this.popper.style.top = '';\n    this.popper.style.left = '';\n    this.popper.style.right = '';\n    this.popper.style.bottom = '';\n    this.popper.style.willChange = '';\n    this.popper.style[getSupportedPropertyName('transform')] = '';\n  }\n\n  this.disableEventListeners();\n\n  // remove the popper if user explicitly asked for the deletion on destroy\n  // do not use `remove` because IE11 doesn't support it\n  if (this.options.removeOnDestroy) {\n    this.popper.parentNode.removeChild(this.popper);\n  }\n  return this;\n}\n","/**\n * Get the window associated with the element\n * @argument {Element} element\n * @returns {Window}\n */\nexport default function getWindow(element) {\n  const ownerDocument = element.ownerDocument;\n  return ownerDocument ? ownerDocument.defaultView : window;\n}\n","import getScrollParent from './getScrollParent';\nimport getWindow from './getWindow';\n\nfunction attachToScrollParents(scrollParent, event, callback, scrollParents) {\n  const isBody = scrollParent.nodeName === 'BODY';\n  const target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;\n  target.addEventListener(event, callback, { passive: true });\n\n  if (!isBody) {\n    attachToScrollParents(\n      getScrollParent(target.parentNode),\n      event,\n      callback,\n      scrollParents\n    );\n  }\n  scrollParents.push(target);\n}\n\n/**\n * Setup needed event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nexport default function setupEventListeners(\n  reference,\n  options,\n  state,\n  updateBound\n) {\n  // Resize event listener on window\n  state.updateBound = updateBound;\n  getWindow(reference).addEventListener('resize', state.updateBound, { passive: true });\n\n  // Scroll event listener on scroll parents\n  const scrollElement = getScrollParent(reference);\n  attachToScrollParents(\n    scrollElement,\n    'scroll',\n    state.updateBound,\n    state.scrollParents\n  );\n  state.scrollElement = scrollElement;\n  state.eventsEnabled = true;\n\n  return state;\n}\n","import setupEventListeners from '../utils/setupEventListeners';\n\n/**\n * It will add resize/scroll events and start recalculating\n * position of the popper element when they are triggered.\n * @method\n * @memberof Popper\n */\nexport default function enableEventListeners() {\n  if (!this.state.eventsEnabled) {\n    this.state = setupEventListeners(\n      this.reference,\n      this.options,\n      this.state,\n      this.scheduleUpdate\n    );\n  }\n}\n","import removeEventListeners from '../utils/removeEventListeners';\n\n/**\n * It will remove resize/scroll events and won't recalculate popper position\n * when they are triggered. It also won't trigger `onUpdate` callback anymore,\n * unless you call `update` method manually.\n * @method\n * @memberof Popper\n */\nexport default function disableEventListeners() {\n  if (this.state.eventsEnabled) {\n    cancelAnimationFrame(this.scheduleUpdate);\n    this.state = removeEventListeners(this.reference, this.state);\n  }\n}\n","import getWindow from './getWindow';\n\n/**\n * Remove event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nexport default function removeEventListeners(reference, state) {\n  // Remove resize event listener on window\n  getWindow(reference).removeEventListener('resize', state.updateBound);\n\n  // Remove scroll event listener on scroll parents\n  state.scrollParents.forEach(target => {\n    target.removeEventListener('scroll', state.updateBound);\n  });\n\n  // Reset state\n  state.updateBound = null;\n  state.scrollParents = [];\n  state.scrollElement = null;\n  state.eventsEnabled = false;\n  return state;\n}\n","/**\n * Tells if a given input is a number\n * @method\n * @memberof Popper.Utils\n * @param {*} input to check\n * @return {Boolean}\n */\nexport default function isNumeric(n) {\n  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\n}\n","import isNumeric from './isNumeric';\n\n/**\n * Set the style to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the style to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nexport default function setStyles(element, styles) {\n  Object.keys(styles).forEach(prop => {\n    let unit = '';\n    // add unit if the value is numeric and is one of the following\n    if (\n      ['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !==\n        -1 &&\n      isNumeric(styles[prop])\n    ) {\n      unit = 'px';\n    }\n    element.style[prop] = styles[prop] + unit;\n  });\n}\n","import getSupportedPropertyName from '../utils/getSupportedPropertyName';\nimport find from '../utils/find';\nimport getOffsetParent from '../utils/getOffsetParent';\nimport getBoundingClientRect from '../utils/getBoundingClientRect';\nimport getRoundedOffsets from '../utils/getRoundedOffsets';\nimport isBrowser from '../utils/isBrowser';\n\nconst isFirefox = isBrowser && /Firefox/i.test(navigator.userAgent);\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function computeStyle(data, options) {\n  const { x, y } = options;\n  const { popper } = data.offsets;\n\n  // Remove this legacy support in Popper.js v2\n  const legacyGpuAccelerationOption = find(\n    data.instance.modifiers,\n    modifier => modifier.name === 'applyStyle'\n  ).gpuAcceleration;\n  if (legacyGpuAccelerationOption !== undefined) {\n    console.warn(\n      'WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!'\n    );\n  }\n  const gpuAcceleration =\n    legacyGpuAccelerationOption !== undefined\n      ? legacyGpuAccelerationOption\n      : options.gpuAcceleration;\n\n  const offsetParent = getOffsetParent(data.instance.popper);\n  const offsetParentRect = getBoundingClientRect(offsetParent);\n\n  // Styles\n  const styles = {\n    position: popper.position,\n  };\n\n  const offsets = getRoundedOffsets(\n    data,\n    window.devicePixelRatio < 2 || !isFirefox\n  );\n\n  const sideA = x === 'bottom' ? 'top' : 'bottom';\n  const sideB = y === 'right' ? 'left' : 'right';\n\n  // if gpuAcceleration is set to `true` and transform is supported,\n  //  we use `translate3d` to apply the position to the popper we\n  // automatically use the supported prefixed version if needed\n  const prefixedProperty = getSupportedPropertyName('transform');\n\n  // now, let's make a step back and look at this code closely (wtf?)\n  // If the content of the popper grows once it's been positioned, it\n  // may happen that the popper gets misplaced because of the new content\n  // overflowing its reference element\n  // To avoid this problem, we provide two options (x and y), which allow\n  // the consumer to define the offset origin.\n  // If we position a popper on top of a reference element, we can set\n  // `x` to `top` to make the popper grow towards its top instead of\n  // its bottom.\n  let left, top;\n  if (sideA === 'bottom') {\n    // when offsetParent is <html> the positioning is relative to the bottom of the screen (excluding the scrollbar)\n    // and not the bottom of the html element\n    if (offsetParent.nodeName === 'HTML') {\n      top = -offsetParent.clientHeight + offsets.bottom;\n    } else {\n      top = -offsetParentRect.height + offsets.bottom;\n    }\n  } else {\n    top = offsets.top;\n  }\n  if (sideB === 'right') {\n    if (offsetParent.nodeName === 'HTML') {\n      left = -offsetParent.clientWidth + offsets.right;\n    } else {\n      left = -offsetParentRect.width + offsets.right;\n    }\n  } else {\n    left = offsets.left;\n  }\n  if (gpuAcceleration && prefixedProperty) {\n    styles[prefixedProperty] = `translate3d(${left}px, ${top}px, 0)`;\n    styles[sideA] = 0;\n    styles[sideB] = 0;\n    styles.willChange = 'transform';\n  } else {\n    // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties\n    const invertTop = sideA === 'bottom' ? -1 : 1;\n    const invertLeft = sideB === 'right' ? -1 : 1;\n    styles[sideA] = top * invertTop;\n    styles[sideB] = left * invertLeft;\n    styles.willChange = `${sideA}, ${sideB}`;\n  }\n\n  // Attributes\n  const attributes = {\n    'x-placement': data.placement,\n  };\n\n  // Update `data` attributes, styles and arrowStyles\n  data.attributes = { ...attributes, ...data.attributes };\n  data.styles = { ...styles, ...data.styles };\n  data.arrowStyles = { ...data.offsets.arrow, ...data.arrowStyles };\n\n  return data;\n}\n","import find from './find';\n\n/**\n * Helper used to know if the given modifier depends from another one.<br />\n * It checks if the needed modifier is listed and enabled.\n * @method\n * @memberof Popper.Utils\n * @param {Array} modifiers - list of modifiers\n * @param {String} requestingName - name of requesting modifier\n * @param {String} requestedName - name of requested modifier\n * @returns {Boolean}\n */\nexport default function isModifierRequired(\n  modifiers,\n  requestingName,\n  requestedName\n) {\n  const requesting = find(modifiers, ({ name }) => name === requestingName);\n\n  const isRequired =\n    !!requesting &&\n    modifiers.some(modifier => {\n      return (\n        modifier.name === requestedName &&\n        modifier.enabled &&\n        modifier.order < requesting.order\n      );\n    });\n\n  if (!isRequired) {\n    const requesting = `\\`${requestingName}\\``;\n    const requested = `\\`${requestedName}\\``;\n    console.warn(\n      `${requested} modifier is required by ${requesting} modifier in order to work, be sure to include it before ${requesting}!`\n    );\n  }\n  return isRequired;\n}\n","/**\n * List of accepted placements to use as values of the `placement` option.<br />\n * Valid placements are:\n * - `auto`\n * - `top`\n * - `right`\n * - `bottom`\n * - `left`\n *\n * Each placement can have a variation from this list:\n * - `-start`\n * - `-end`\n *\n * Variations are interpreted easily if you think of them as the left to right\n * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`\n * is right.<br />\n * Vertically (`left` and `right`), `start` is top and `end` is bottom.\n *\n * Some valid examples are:\n * - `top-end` (on top of reference, right aligned)\n * - `right-start` (on right of reference, top aligned)\n * - `bottom` (on bottom, centered)\n * - `auto-end` (on the side with more space available, alignment depends by placement)\n *\n * @static\n * @type {Array}\n * @enum {String}\n * @readonly\n * @method placements\n * @memberof Popper\n */\nexport default [\n  'auto-start',\n  'auto',\n  'auto-end',\n  'top-start',\n  'top',\n  'top-end',\n  'right-start',\n  'right',\n  'right-end',\n  'bottom-end',\n  'bottom',\n  'bottom-start',\n  'left-end',\n  'left',\n  'left-start',\n];\n","import placements from '../methods/placements';\n\n// Get rid of `auto` `auto-start` and `auto-end`\nconst validPlacements = placements.slice(3);\n\n/**\n * Given an initial placement, returns all the subsequent placements\n * clockwise (or counter-clockwise).\n *\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement - A valid placement (it accepts variations)\n * @argument {Boolean} counter - Set to true to walk the placements counterclockwise\n * @returns {Array} placements including their variations\n */\nexport default function clockwise(placement, counter = false) {\n  const index = validPlacements.indexOf(placement);\n  const arr = validPlacements\n    .slice(index + 1)\n    .concat(validPlacements.slice(0, index));\n  return counter ? arr.reverse() : arr;\n}\n","import getOppositePlacement from '../utils/getOppositePlacement';\nimport getOppositeVariation from '../utils/getOppositeVariation';\nimport getPopperOffsets from '../utils/getPopperOffsets';\nimport runModifiers from '../utils/runModifiers';\nimport getBoundaries from '../utils/getBoundaries';\nimport isModifierEnabled from '../utils/isModifierEnabled';\nimport clockwise from '../utils/clockwise';\n\nconst BEHAVIORS = {\n  FLIP: 'flip',\n  CLOCKWISE: 'clockwise',\n  COUNTERCLOCKWISE: 'counterclockwise',\n};\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function flip(data, options) {\n  // if `inner` modifier is enabled, we can't use the `flip` modifier\n  if (isModifierEnabled(data.instance.modifiers, 'inner')) {\n    return data;\n  }\n\n  if (data.flipped && data.placement === data.originalPlacement) {\n    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides\n    return data;\n  }\n\n  const boundaries = getBoundaries(\n    data.instance.popper,\n    data.instance.reference,\n    options.padding,\n    options.boundariesElement,\n    data.positionFixed\n  );\n\n  let placement = data.placement.split('-')[0];\n  let placementOpposite = getOppositePlacement(placement);\n  let variation = data.placement.split('-')[1] || '';\n\n  let flipOrder = [];\n\n  switch (options.behavior) {\n    case BEHAVIORS.FLIP:\n      flipOrder = [placement, placementOpposite];\n      break;\n    case BEHAVIORS.CLOCKWISE:\n      flipOrder = clockwise(placement);\n      break;\n    case BEHAVIORS.COUNTERCLOCKWISE:\n      flipOrder = clockwise(placement, true);\n      break;\n    default:\n      flipOrder = options.behavior;\n  }\n\n  flipOrder.forEach((step, index) => {\n    if (placement !== step || flipOrder.length === index + 1) {\n      return data;\n    }\n\n    placement = data.placement.split('-')[0];\n    placementOpposite = getOppositePlacement(placement);\n\n    const popperOffsets = data.offsets.popper;\n    const refOffsets = data.offsets.reference;\n\n    // using floor because the reference offsets may contain decimals we are not going to consider here\n    const floor = Math.floor;\n    const overlapsRef =\n      (placement === 'left' &&\n        floor(popperOffsets.right) > floor(refOffsets.left)) ||\n      (placement === 'right' &&\n        floor(popperOffsets.left) < floor(refOffsets.right)) ||\n      (placement === 'top' &&\n        floor(popperOffsets.bottom) > floor(refOffsets.top)) ||\n      (placement === 'bottom' &&\n        floor(popperOffsets.top) < floor(refOffsets.bottom));\n\n    const overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);\n    const overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);\n    const overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);\n    const overflowsBottom =\n      floor(popperOffsets.bottom) > floor(boundaries.bottom);\n\n    const overflowsBoundaries =\n      (placement === 'left' && overflowsLeft) ||\n      (placement === 'right' && overflowsRight) ||\n      (placement === 'top' && overflowsTop) ||\n      (placement === 'bottom' && overflowsBottom);\n\n    // flip the variation if required\n    const isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n\n    // flips variation if reference element overflows boundaries\n    const flippedVariationByRef =\n      !!options.flipVariations &&\n      ((isVertical && variation === 'start' && overflowsLeft) ||\n        (isVertical && variation === 'end' && overflowsRight) ||\n        (!isVertical && variation === 'start' && overflowsTop) ||\n        (!isVertical && variation === 'end' && overflowsBottom));\n\n    // flips variation if popper content overflows boundaries\n    const flippedVariationByContent =\n      !!options.flipVariationsByContent &&\n      ((isVertical && variation === 'start' && overflowsRight) ||\n        (isVertical && variation === 'end' && overflowsLeft) ||\n        (!isVertical && variation === 'start' && overflowsBottom) ||\n        (!isVertical && variation === 'end' && overflowsTop));\n\n    const flippedVariation = flippedVariationByRef || flippedVariationByContent;\n\n    if (overlapsRef || overflowsBoundaries || flippedVariation) {\n      // this boolean to detect any flip loop\n      data.flipped = true;\n\n      if (overlapsRef || overflowsBoundaries) {\n        placement = flipOrder[index + 1];\n      }\n\n      if (flippedVariation) {\n        variation = getOppositeVariation(variation);\n      }\n\n      data.placement = placement + (variation ? '-' + variation : '');\n\n      // this object contains `position`, we want to preserve it along with\n      // any additional property we may add in the future\n      data.offsets.popper = {\n        ...data.offsets.popper,\n        ...getPopperOffsets(\n          data.instance.popper,\n          data.offsets.reference,\n          data.placement\n        ),\n      };\n\n      data = runModifiers(data.instance.modifiers, data, 'flip');\n    }\n  });\n  return data;\n}\n","import isNumeric from '../utils/isNumeric';\nimport getClientRect from '../utils/getClientRect';\nimport find from '../utils/find';\n\n/**\n * Converts a string containing value + unit into a px value number\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} str - Value + unit string\n * @argument {String} measurement - `height` or `width`\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @returns {Number|String}\n * Value in pixels, or original string if no values were extracted\n */\nexport function toValue(str, measurement, popperOffsets, referenceOffsets) {\n  // separate value from unit\n  const split = str.match(/((?:\\-|\\+)?\\d*\\.?\\d*)(.*)/);\n  const value = +split[1];\n  const unit = split[2];\n\n  // If it's not a number it's an operator, I guess\n  if (!value) {\n    return str;\n  }\n\n  if (unit.indexOf('%') === 0) {\n    let element;\n    switch (unit) {\n      case '%p':\n        element = popperOffsets;\n        break;\n      case '%':\n      case '%r':\n      default:\n        element = referenceOffsets;\n    }\n\n    const rect = getClientRect(element);\n    return rect[measurement] / 100 * value;\n  } else if (unit === 'vh' || unit === 'vw') {\n    // if is a vh or vw, we calculate the size based on the viewport\n    let size;\n    if (unit === 'vh') {\n      size = Math.max(\n        document.documentElement.clientHeight,\n        window.innerHeight || 0\n      );\n    } else {\n      size = Math.max(\n        document.documentElement.clientWidth,\n        window.innerWidth || 0\n      );\n    }\n    return size / 100 * value;\n  } else {\n    // if is an explicit pixel unit, we get rid of the unit and keep the value\n    // if is an implicit unit, it's px, and we return just the value\n    return value;\n  }\n}\n\n/**\n * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} offset\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @argument {String} basePlacement\n * @returns {Array} a two cells array with x and y offsets in numbers\n */\nexport function parseOffset(\n  offset,\n  popperOffsets,\n  referenceOffsets,\n  basePlacement\n) {\n  const offsets = [0, 0];\n\n  // Use height if placement is left or right and index is 0 otherwise use width\n  // in this way the first offset will use an axis and the second one\n  // will use the other one\n  const useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;\n\n  // Split the offset string to obtain a list of values and operands\n  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)\n  const fragments = offset.split(/(\\+|\\-)/).map(frag => frag.trim());\n\n  // Detect if the offset string contains a pair of values or a single one\n  // they could be separated by comma or space\n  const divider = fragments.indexOf(\n    find(fragments, frag => frag.search(/,|\\s/) !== -1)\n  );\n\n  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {\n    console.warn(\n      'Offsets separated by white space(s) are deprecated, use a comma (,) instead.'\n    );\n  }\n\n  // If divider is found, we divide the list of values and operands to divide\n  // them by ofset X and Y.\n  const splitRegex = /\\s*,\\s*|\\s+/;\n  let ops = divider !== -1\n    ? [\n        fragments\n          .slice(0, divider)\n          .concat([fragments[divider].split(splitRegex)[0]]),\n        [fragments[divider].split(splitRegex)[1]].concat(\n          fragments.slice(divider + 1)\n        ),\n      ]\n    : [fragments];\n\n  // Convert the values with units to absolute pixels to allow our computations\n  ops = ops.map((op, index) => {\n    // Most of the units rely on the orientation of the popper\n    const measurement = (index === 1 ? !useHeight : useHeight)\n      ? 'height'\n      : 'width';\n    let mergeWithPrevious = false;\n    return (\n      op\n        // This aggregates any `+` or `-` sign that aren't considered operators\n        // e.g.: 10 + +5 => [10, +, +5]\n        .reduce((a, b) => {\n          if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {\n            a[a.length - 1] = b;\n            mergeWithPrevious = true;\n            return a;\n          } else if (mergeWithPrevious) {\n            a[a.length - 1] += b;\n            mergeWithPrevious = false;\n            return a;\n          } else {\n            return a.concat(b);\n          }\n        }, [])\n        // Here we convert the string values into number values (in px)\n        .map(str => toValue(str, measurement, popperOffsets, referenceOffsets))\n    );\n  });\n\n  // Loop trough the offsets arrays and execute the operations\n  ops.forEach((op, index) => {\n    op.forEach((frag, index2) => {\n      if (isNumeric(frag)) {\n        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);\n      }\n    });\n  });\n  return offsets;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @argument {Number|String} options.offset=0\n * The offset value as described in the modifier description\n * @returns {Object} The data object, properly modified\n */\nexport default function offset(data, { offset }) {\n  const { placement, offsets: { popper, reference } } = data;\n  const basePlacement = placement.split('-')[0];\n\n  let offsets;\n  if (isNumeric(+offset)) {\n    offsets = [+offset, 0];\n  } else {\n    offsets = parseOffset(offset, popper, reference, basePlacement);\n  }\n\n  if (basePlacement === 'left') {\n    popper.top += offsets[0];\n    popper.left -= offsets[1];\n  } else if (basePlacement === 'right') {\n    popper.top += offsets[0];\n    popper.left += offsets[1];\n  } else if (basePlacement === 'top') {\n    popper.left += offsets[0];\n    popper.top -= offsets[1];\n  } else if (basePlacement === 'bottom') {\n    popper.left += offsets[0];\n    popper.top += offsets[1];\n  }\n\n  data.popper = popper;\n  return data;\n}\n","import applyStyle, { applyStyleOnLoad } from './applyStyle';\nimport computeStyle from './computeStyle';\nimport arrow from './arrow';\nimport flip from './flip';\nimport keepTogether from './keepTogether';\nimport offset from './offset';\nimport preventOverflow from './preventOverflow';\nimport shift from './shift';\nimport hide from './hide';\nimport inner from './inner';\n\n/**\n * Modifier function, each modifier can have a function of this type assigned\n * to its `fn` property.<br />\n * These functions will be called on each update, this means that you must\n * make sure they are performant enough to avoid performance bottlenecks.\n *\n * @function ModifierFn\n * @argument {dataObject} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {dataObject} The data object, properly modified\n */\n\n/**\n * Modifiers are plugins used to alter the behavior of your poppers.<br />\n * Popper.js uses a set of 9 modifiers to provide all the basic functionalities\n * needed by the library.\n *\n * Usually you don't want to override the `order`, `fn` and `onLoad` props.\n * All the other properties are configurations that could be tweaked.\n * @namespace modifiers\n */\nexport default {\n  /**\n   * Modifier used to shift the popper on the start or end of its reference\n   * element.<br />\n   * It will read the variation of the `placement` property.<br />\n   * It can be one either `-end` or `-start`.\n   * @memberof modifiers\n   * @inner\n   */\n  shift: {\n    /** @prop {number} order=100 - Index used to define the order of execution */\n    order: 100,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: shift,\n  },\n\n  /**\n   * The `offset` modifier can shift your popper on both its axis.\n   *\n   * It accepts the following units:\n   * - `px` or unit-less, interpreted as pixels\n   * - `%` or `%r`, percentage relative to the length of the reference element\n   * - `%p`, percentage relative to the length of the popper element\n   * - `vw`, CSS viewport width unit\n   * - `vh`, CSS viewport height unit\n   *\n   * For length is intended the main axis relative to the placement of the popper.<br />\n   * This means that if the placement is `top` or `bottom`, the length will be the\n   * `width`. In case of `left` or `right`, it will be the `height`.\n   *\n   * You can provide a single value (as `Number` or `String`), or a pair of values\n   * as `String` divided by a comma or one (or more) white spaces.<br />\n   * The latter is a deprecated method because it leads to confusion and will be\n   * removed in v2.<br />\n   * Additionally, it accepts additions and subtractions between different units.\n   * Note that multiplications and divisions aren't supported.\n   *\n   * Valid examples are:\n   * ```\n   * 10\n   * '10%'\n   * '10, 10'\n   * '10%, 10'\n   * '10 + 10%'\n   * '10 - 5vh + 3%'\n   * '-10px + 5vh, 5px - 6%'\n   * ```\n   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap\n   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.\n   * > You can read more on this at this [issue](https://github.com/FezVrasta/popper.js/issues/373).\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  offset: {\n    /** @prop {number} order=200 - Index used to define the order of execution */\n    order: 200,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: offset,\n    /** @prop {Number|String} offset=0\n     * The offset value as described in the modifier description\n     */\n    offset: 0,\n  },\n\n  /**\n   * Modifier used to prevent the popper from being positioned outside the boundary.\n   *\n   * A scenario exists where the reference itself is not within the boundaries.<br />\n   * We can say it has \"escaped the boundaries\" — or just \"escaped\".<br />\n   * In this case we need to decide whether the popper should either:\n   *\n   * - detach from the reference and remain \"trapped\" in the boundaries, or\n   * - if it should ignore the boundary and \"escape with its reference\"\n   *\n   * When `escapeWithReference` is set to`true` and reference is completely\n   * outside its boundaries, the popper will overflow (or completely leave)\n   * the boundaries in order to remain attached to the edge of the reference.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  preventOverflow: {\n    /** @prop {number} order=300 - Index used to define the order of execution */\n    order: 300,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: preventOverflow,\n    /**\n     * @prop {Array} [priority=['left','right','top','bottom']]\n     * Popper will try to prevent overflow following these priorities by default,\n     * then, it could overflow on the left and on top of the `boundariesElement`\n     */\n    priority: ['left', 'right', 'top', 'bottom'],\n    /**\n     * @prop {number} padding=5\n     * Amount of pixel used to define a minimum distance between the boundaries\n     * and the popper. This makes sure the popper always has a little padding\n     * between the edges of its container\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='scrollParent'\n     * Boundaries used by the modifier. Can be `scrollParent`, `window`,\n     * `viewport` or any DOM element.\n     */\n    boundariesElement: 'scrollParent',\n  },\n\n  /**\n   * Modifier used to make sure the reference and its popper stay near each other\n   * without leaving any gap between the two. Especially useful when the arrow is\n   * enabled and you want to ensure that it points to its reference element.\n   * It cares only about the first axis. You can still have poppers with margin\n   * between the popper and its reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  keepTogether: {\n    /** @prop {number} order=400 - Index used to define the order of execution */\n    order: 400,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: keepTogether,\n  },\n\n  /**\n   * This modifier is used to move the `arrowElement` of the popper to make\n   * sure it is positioned between the reference element and its popper element.\n   * It will read the outer size of the `arrowElement` node to detect how many\n   * pixels of conjunction are needed.\n   *\n   * It has no effect if no `arrowElement` is provided.\n   * @memberof modifiers\n   * @inner\n   */\n  arrow: {\n    /** @prop {number} order=500 - Index used to define the order of execution */\n    order: 500,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: arrow,\n    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */\n    element: '[x-arrow]',\n  },\n\n  /**\n   * Modifier used to flip the popper's placement when it starts to overlap its\n   * reference element.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   *\n   * **NOTE:** this modifier will interrupt the current update cycle and will\n   * restart it if it detects the need to flip the placement.\n   * @memberof modifiers\n   * @inner\n   */\n  flip: {\n    /** @prop {number} order=600 - Index used to define the order of execution */\n    order: 600,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: flip,\n    /**\n     * @prop {String|Array} behavior='flip'\n     * The behavior used to change the popper's placement. It can be one of\n     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid\n     * placements (with optional variations)\n     */\n    behavior: 'flip',\n    /**\n     * @prop {number} padding=5\n     * The popper will flip if it hits the edges of the `boundariesElement`\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='viewport'\n     * The element which will define the boundaries of the popper position.\n     * The popper will never be placed outside of the defined boundaries\n     * (except if `keepTogether` is enabled)\n     */\n    boundariesElement: 'viewport',\n    /**\n     * @prop {Boolean} flipVariations=false\n     * The popper will switch placement variation between `-start` and `-end` when\n     * the reference element overlaps its boundaries.\n     *\n     * The original placement should have a set variation.\n     */\n    flipVariations: false,\n    /**\n     * @prop {Boolean} flipVariationsByContent=false\n     * The popper will switch placement variation between `-start` and `-end` when\n     * the popper element overlaps its reference boundaries.\n     *\n     * The original placement should have a set variation.\n     */\n    flipVariationsByContent: false,\n  },\n\n  /**\n   * Modifier used to make the popper flow toward the inner of the reference element.\n   * By default, when this modifier is disabled, the popper will be placed outside\n   * the reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  inner: {\n    /** @prop {number} order=700 - Index used to define the order of execution */\n    order: 700,\n    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */\n    enabled: false,\n    /** @prop {ModifierFn} */\n    fn: inner,\n  },\n\n  /**\n   * Modifier used to hide the popper when its reference element is outside of the\n   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can\n   * be used to hide with a CSS selector the popper when its reference is\n   * out of boundaries.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   * @memberof modifiers\n   * @inner\n   */\n  hide: {\n    /** @prop {number} order=800 - Index used to define the order of execution */\n    order: 800,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: hide,\n  },\n\n  /**\n   * Computes the style that will be applied to the popper element to gets\n   * properly positioned.\n   *\n   * Note that this modifier will not touch the DOM, it just prepares the styles\n   * so that `applyStyle` modifier can apply it. This separation is useful\n   * in case you need to replace `applyStyle` with a custom implementation.\n   *\n   * This modifier has `850` as `order` value to maintain backward compatibility\n   * with previous versions of Popper.js. Expect the modifiers ordering method\n   * to change in future major versions of the library.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  computeStyle: {\n    /** @prop {number} order=850 - Index used to define the order of execution */\n    order: 850,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: computeStyle,\n    /**\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3D transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties\n     */\n    gpuAcceleration: true,\n    /**\n     * @prop {string} [x='bottom']\n     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.\n     * Change this if your popper should grow in a direction different from `bottom`\n     */\n    x: 'bottom',\n    /**\n     * @prop {string} [x='left']\n     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.\n     * Change this if your popper should grow in a direction different from `right`\n     */\n    y: 'right',\n  },\n\n  /**\n   * Applies the computed styles to the popper element.\n   *\n   * All the DOM manipulations are limited to this modifier. This is useful in case\n   * you want to integrate Popper.js inside a framework or view library and you\n   * want to delegate all the DOM manipulations to it.\n   *\n   * Note that if you disable this modifier, you must make sure the popper element\n   * has its position set to `absolute` before Popper.js can do its work!\n   *\n   * Just disable this modifier and define your own to achieve the desired effect.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  applyStyle: {\n    /** @prop {number} order=900 - Index used to define the order of execution */\n    order: 900,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: applyStyle,\n    /** @prop {Function} */\n    onLoad: applyStyleOnLoad,\n    /**\n     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3D transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties\n     */\n    gpuAcceleration: undefined,\n  },\n};\n\n/**\n * The `dataObject` is an object containing all the information used by Popper.js.\n * This object is passed to modifiers and to the `onCreate` and `onUpdate` callbacks.\n * @name dataObject\n * @property {Object} data.instance The Popper.js instance\n * @property {String} data.placement Placement applied to popper\n * @property {String} data.originalPlacement Placement originally defined on init\n * @property {Boolean} data.flipped True if popper has been flipped by flip modifier\n * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper\n * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier\n * @property {Object} data.styles Any CSS property defined here will be applied to the popper. It expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow. It expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.boundaries Offsets of the popper boundaries\n * @property {Object} data.offsets The measurements of popper, reference and arrow elements\n * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0\n */\n","import modifiers from '../modifiers/index';\n\n/**\n * Default options provided to Popper.js constructor.<br />\n * These can be overridden using the `options` argument of Popper.js.<br />\n * To override an option, simply pass an object with the same\n * structure of the `options` object, as the 3rd argument. For example:\n * ```\n * new Popper(ref, pop, {\n *   modifiers: {\n *     preventOverflow: { enabled: false }\n *   }\n * })\n * ```\n * @type {Object}\n * @static\n * @memberof Popper\n */\nexport default {\n  /**\n   * Popper's placement.\n   * @prop {Popper.placements} placement='bottom'\n   */\n  placement: 'bottom',\n\n  /**\n   * Set this to true if you want popper to position it self in 'fixed' mode\n   * @prop {Boolean} positionFixed=false\n   */\n  positionFixed: false,\n\n  /**\n   * Whether events (resize, scroll) are initially enabled.\n   * @prop {Boolean} eventsEnabled=true\n   */\n  eventsEnabled: true,\n\n  /**\n   * Set to true if you want to automatically remove the popper when\n   * you call the `destroy` method.\n   * @prop {Boolean} removeOnDestroy=false\n   */\n  removeOnDestroy: false,\n\n  /**\n   * Callback called when the popper is created.<br />\n   * By default, it is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onCreate}\n   */\n  onCreate: () => {},\n\n  /**\n   * Callback called when the popper is updated. This callback is not called\n   * on the initialization/creation of the popper, but only on subsequent\n   * updates.<br />\n   * By default, it is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onUpdate}\n   */\n  onUpdate: () => {},\n\n  /**\n   * List of modifiers used to modify the offsets before they are applied to the popper.\n   * They provide most of the functionalities of Popper.js.\n   * @prop {modifiers}\n   */\n  modifiers,\n};\n\n/**\n * @callback onCreate\n * @param {dataObject} data\n */\n\n/**\n * @callback onUpdate\n * @param {dataObject} data\n */\n","/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function shift(data) {\n  const placement = data.placement;\n  const basePlacement = placement.split('-')[0];\n  const shiftvariation = placement.split('-')[1];\n\n  // if shift shiftvariation is specified, run the modifier\n  if (shiftvariation) {\n    const { reference, popper } = data.offsets;\n    const isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\n    const side = isVertical ? 'left' : 'top';\n    const measurement = isVertical ? 'width' : 'height';\n\n    const shiftOffsets = {\n      start: { [side]: reference[side] },\n      end: {\n        [side]: reference[side] + reference[measurement] - popper[measurement],\n      },\n    };\n\n    data.offsets.popper = { ...popper, ...shiftOffsets[shiftvariation] };\n  }\n\n  return data;\n}\n","import getOffsetParent from '../utils/getOffsetParent';\nimport getBoundaries from '../utils/getBoundaries';\nimport getSupportedPropertyName from '../utils/getSupportedPropertyName';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function preventOverflow(data, options) {\n  let boundariesElement =\n    options.boundariesElement || getOffsetParent(data.instance.popper);\n\n  // If offsetParent is the reference element, we really want to\n  // go one step up and use the next offsetParent as reference to\n  // avoid to make this modifier completely useless and look like broken\n  if (data.instance.reference === boundariesElement) {\n    boundariesElement = getOffsetParent(boundariesElement);\n  }\n\n  // NOTE: DOM access here\n  // resets the popper's position so that the document size can be calculated excluding\n  // the size of the popper element itself\n  const transformProp = getSupportedPropertyName('transform');\n  const popperStyles = data.instance.popper.style; // assignment to help minification\n  const { top, left, [transformProp]: transform } = popperStyles;\n  popperStyles.top = '';\n  popperStyles.left = '';\n  popperStyles[transformProp] = '';\n\n  const boundaries = getBoundaries(\n    data.instance.popper,\n    data.instance.reference,\n    options.padding,\n    boundariesElement,\n    data.positionFixed\n  );\n\n  // NOTE: DOM access here\n  // restores the original style properties after the offsets have been computed\n  popperStyles.top = top;\n  popperStyles.left = left;\n  popperStyles[transformProp] = transform;\n\n  options.boundaries = boundaries;\n\n  const order = options.priority;\n  let popper = data.offsets.popper;\n\n  const check = {\n    primary(placement) {\n      let value = popper[placement];\n      if (\n        popper[placement] < boundaries[placement] &&\n        !options.escapeWithReference\n      ) {\n        value = Math.max(popper[placement], boundaries[placement]);\n      }\n      return { [placement]: value };\n    },\n    secondary(placement) {\n      const mainSide = placement === 'right' ? 'left' : 'top';\n      let value = popper[mainSide];\n      if (\n        popper[placement] > boundaries[placement] &&\n        !options.escapeWithReference\n      ) {\n        value = Math.min(\n          popper[mainSide],\n          boundaries[placement] -\n            (placement === 'right' ? popper.width : popper.height)\n        );\n      }\n      return { [mainSide]: value };\n    },\n  };\n\n  order.forEach(placement => {\n    const side =\n      ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';\n    popper = { ...popper, ...check[side](placement) };\n  });\n\n  data.offsets.popper = popper;\n\n  return data;\n}\n","/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function keepTogether(data) {\n  const { popper, reference } = data.offsets;\n  const placement = data.placement.split('-')[0];\n  const floor = Math.floor;\n  const isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n  const side = isVertical ? 'right' : 'bottom';\n  const opSide = isVertical ? 'left' : 'top';\n  const measurement = isVertical ? 'width' : 'height';\n\n  if (popper[side] < floor(reference[opSide])) {\n    data.offsets.popper[opSide] =\n      floor(reference[opSide]) - popper[measurement];\n  }\n  if (popper[opSide] > floor(reference[side])) {\n    data.offsets.popper[opSide] = floor(reference[side]);\n  }\n\n  return data;\n}\n","import getClientRect from '../utils/getClientRect';\nimport getOuterSizes from '../utils/getOuterSizes';\nimport isModifierRequired from '../utils/isModifierRequired';\nimport getStyleComputedProperty from '../utils/getStyleComputedProperty';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function arrow(data, options) {\n  // arrow depends on keepTogether in order to work\n  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {\n    return data;\n  }\n\n  let arrowElement = options.element;\n\n  // if arrowElement is a string, suppose it's a CSS selector\n  if (typeof arrowElement === 'string') {\n    arrowElement = data.instance.popper.querySelector(arrowElement);\n\n    // if arrowElement is not found, don't run the modifier\n    if (!arrowElement) {\n      return data;\n    }\n  } else {\n    // if the arrowElement isn't a query selector we must check that the\n    // provided DOM node is child of its popper node\n    if (!data.instance.popper.contains(arrowElement)) {\n      console.warn(\n        'WARNING: `arrow.element` must be child of its popper element!'\n      );\n      return data;\n    }\n  }\n\n  const placement = data.placement.split('-')[0];\n  const { popper, reference } = data.offsets;\n  const isVertical = ['left', 'right'].indexOf(placement) !== -1;\n\n  const len = isVertical ? 'height' : 'width';\n  const sideCapitalized = isVertical ? 'Top' : 'Left';\n  const side = sideCapitalized.toLowerCase();\n  const altSide = isVertical ? 'left' : 'top';\n  const opSide = isVertical ? 'bottom' : 'right';\n  const arrowElementSize = getOuterSizes(arrowElement)[len];\n\n  //\n  // extends keepTogether behavior making sure the popper and its\n  // reference have enough pixels in conjunction\n  //\n\n  // top/left side\n  if (reference[opSide] - arrowElementSize < popper[side]) {\n    data.offsets.popper[side] -=\n      popper[side] - (reference[opSide] - arrowElementSize);\n  }\n  // bottom/right side\n  if (reference[side] + arrowElementSize > popper[opSide]) {\n    data.offsets.popper[side] +=\n      reference[side] + arrowElementSize - popper[opSide];\n  }\n  data.offsets.popper = getClientRect(data.offsets.popper);\n\n  // compute center of the popper\n  const center = reference[side] + reference[len] / 2 - arrowElementSize / 2;\n\n  // Compute the sideValue using the updated popper offsets\n  // take popper margin in account because we don't have this info available\n  const css = getStyleComputedProperty(data.instance.popper);\n  const popperMarginSide = parseFloat(css[`margin${sideCapitalized}`]);\n  const popperBorderSide = parseFloat(css[`border${sideCapitalized}Width`]);\n  let sideValue =\n    center - data.offsets.popper[side] - popperMarginSide - popperBorderSide;\n\n  // prevent arrowElement from being placed not contiguously to its popper\n  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);\n\n  data.arrowElement = arrowElement;\n  data.offsets.arrow = {\n    [side]: Math.round(sideValue),\n    [altSide]: '', // make sure to unset any eventual altSide value from the DOM node\n  };\n\n  return data;\n}\n","/**\n * Get the opposite placement variation of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement variation\n * @returns {String} flipped placement variation\n */\nexport default function getOppositeVariation(variation) {\n  if (variation === 'end') {\n    return 'start';\n  } else if (variation === 'start') {\n    return 'end';\n  }\n  return variation;\n}\n","import getClientRect from '../utils/getClientRect';\nimport getOppositePlacement from '../utils/getOppositePlacement';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function inner(data) {\n  const placement = data.placement;\n  const basePlacement = placement.split('-')[0];\n  const { popper, reference } = data.offsets;\n  const isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;\n\n  const subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;\n\n  popper[isHoriz ? 'left' : 'top'] =\n    reference[basePlacement] -\n    (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);\n\n  data.placement = getOppositePlacement(placement);\n  data.offsets.popper = getClientRect(popper);\n\n  return data;\n}\n","import isModifierRequired from '../utils/isModifierRequired';\nimport find from '../utils/find';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function hide(data) {\n  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {\n    return data;\n  }\n\n  const refRect = data.offsets.reference;\n  const bound = find(\n    data.instance.modifiers,\n    modifier => modifier.name === 'preventOverflow'\n  ).boundaries;\n\n  if (\n    refRect.bottom < bound.top ||\n    refRect.left > bound.right ||\n    refRect.top > bound.bottom ||\n    refRect.right < bound.left\n  ) {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === true) {\n      return data;\n    }\n\n    data.hide = true;\n    data.attributes['x-out-of-boundaries'] = '';\n  } else {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === false) {\n      return data;\n    }\n\n    data.hide = false;\n    data.attributes['x-out-of-boundaries'] = false;\n  }\n\n  return data;\n}\n","/**\n * @function\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Boolean} shouldRound - If the offsets should be rounded at all\n * @returns {Object} The popper's position offsets rounded\n *\n * The tale of pixel-perfect positioning. It's still not 100% perfect, but as\n * good as it can be within reason.\n * Discussion here: https://github.com/FezVrasta/popper.js/pull/715\n *\n * Low DPI screens cause a popper to be blurry if not using full pixels (Safari\n * as well on High DPI screens).\n *\n * Firefox prefers no rounding for positioning and does not have blurriness on\n * high DPI screens.\n *\n * Only horizontal placement and left/right values need to be considered.\n */\nexport default function getRoundedOffsets(data, shouldRound) {\n  const { popper, reference } = data.offsets;\n  const { round, floor } = Math;\n  const noRound = v => v;\n  \n  const referenceWidth = round(reference.width);\n  const popperWidth = round(popper.width);\n  \n  const isVertical = ['left', 'right'].indexOf(data.placement) !== -1;\n  const isVariation = data.placement.indexOf('-') !== -1;\n  const sameWidthParity = referenceWidth % 2 === popperWidth % 2;\n  const bothOddWidth = referenceWidth % 2 === 1 && popperWidth % 2 === 1;\n\n  const horizontalToInteger = !shouldRound\n    ? noRound\n    : isVertical || isVariation || sameWidthParity\n    ? round\n    : floor;\n  const verticalToInteger = !shouldRound ? noRound : round;\n\n  return {\n    left: horizontalToInteger(\n      bothOddWidth && !isVariation && shouldRound\n        ? popper.left - 1\n        : popper.left\n    ),\n    top: verticalToInteger(popper.top),\n    bottom: verticalToInteger(popper.bottom),\n    right: horizontalToInteger(popper.right),\n  };\n}\n","import setStyles from '../utils/setStyles';\nimport setAttributes from '../utils/setAttributes';\nimport getReferenceOffsets from '../utils/getReferenceOffsets';\nimport computeAutoPlacement from '../utils/computeAutoPlacement';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} data.styles - List of style properties - values to apply to popper element\n * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The same data object\n */\nexport default function applyStyle(data) {\n  // any property present in `data.styles` will be applied to the popper,\n  // in this way we can make the 3rd party modifiers add custom styles to it\n  // Be aware, modifiers could override the properties defined in the previous\n  // lines of this modifier!\n  setStyles(data.instance.popper, data.styles);\n\n  // any property present in `data.attributes` will be applied to the popper,\n  // they will be set as HTML attributes of the element\n  setAttributes(data.instance.popper, data.attributes);\n\n  // if arrowElement is defined and arrowStyles has some properties\n  if (data.arrowElement && Object.keys(data.arrowStyles).length) {\n    setStyles(data.arrowElement, data.arrowStyles);\n  }\n\n  return data;\n}\n\n/**\n * Set the x-placement attribute before everything else because it could be used\n * to add margins to the popper margins needs to be calculated to get the\n * correct popper offsets.\n * @method\n * @memberof Popper.modifiers\n * @param {HTMLElement} reference - The reference element used to position the popper\n * @param {HTMLElement} popper - The HTML element used as popper\n * @param {Object} options - Popper.js options\n */\nexport function applyStyleOnLoad(\n  reference,\n  popper,\n  options,\n  modifierOptions,\n  state\n) {\n  // compute reference element offsets\n  const referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  const placement = computeAutoPlacement(\n    options.placement,\n    referenceOffsets,\n    popper,\n    reference,\n    options.modifiers.flip.boundariesElement,\n    options.modifiers.flip.padding\n  );\n\n  popper.setAttribute('x-placement', placement);\n\n  // Apply `position` to popper before anything else because\n  // without the position applied we can't guarantee correct computations\n  setStyles(popper, { position: options.positionFixed ? 'fixed' : 'absolute' });\n\n  return options;\n}\n","/**\n * Set the attributes to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the attributes to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nexport default function setAttributes(element, attributes) {\n  Object.keys(attributes).forEach(function(prop) {\n    const value = attributes[prop];\n    if (value !== false) {\n      element.setAttribute(prop, attributes[prop]);\n    } else {\n      element.removeAttribute(prop);\n    }\n  });\n}\n","// Utils\nimport debounce from './utils/debounce';\nimport isFunction from './utils/isFunction';\n\n// Methods\nimport update from './methods/update';\nimport destroy from './methods/destroy';\nimport enableEventListeners from './methods/enableEventListeners';\nimport disableEventListeners from './methods/disableEventListeners';\nimport Defaults from './methods/defaults';\nimport placements from './methods/placements';\n\nexport default class Popper {\n  /**\n   * Creates a new Popper.js instance.\n   * @class Popper\n   * @param {Element|referenceObject} reference - The reference element used to position the popper\n   * @param {Element} popper - The HTML / XML element used as the popper\n   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)\n   * @return {Object} instance - The generated Popper.js instance\n   */\n  constructor(reference, popper, options = {}) {\n    // make update() debounced, so that it only runs at most once-per-tick\n    this.update = debounce(this.update.bind(this));\n\n    // with {} we create a new object with the options inside it\n    this.options = { ...Popper.Defaults, ...options };\n\n    // init state\n    this.state = {\n      isDestroyed: false,\n      isCreated: false,\n      scrollParents: [],\n    };\n\n    // get reference and popper elements (allow jQuery wrappers)\n    this.reference = reference && reference.jquery ? reference[0] : reference;\n    this.popper = popper && popper.jquery ? popper[0] : popper;\n\n    // Deep merge modifiers options\n    this.options.modifiers = {};\n    Object.keys({\n      ...Popper.Defaults.modifiers,\n      ...options.modifiers,\n    }).forEach(name => {\n      this.options.modifiers[name] = {\n        // If it's a built-in modifier, use it as base\n        ...(Popper.Defaults.modifiers[name] || {}),\n        // If there are custom options, override and merge with default ones\n        ...(options.modifiers ? options.modifiers[name] : {}),\n      };\n    });\n\n    // Refactoring modifiers' list (Object => Array)\n    this.modifiers = Object.keys(this.options.modifiers)\n      .map(name => ({\n        name,\n        ...this.options.modifiers[name],\n      }))\n      // sort the modifiers by order\n      .sort((a, b) => a.order - b.order);\n\n    // modifiers have the ability to execute arbitrary code when Popper.js get inited\n    // such code is executed in the same order of its modifier\n    // they could add new properties to their options configuration\n    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!\n    this.modifiers.forEach(modifierOptions => {\n      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {\n        modifierOptions.onLoad(\n          this.reference,\n          this.popper,\n          this.options,\n          modifierOptions,\n          this.state\n        );\n      }\n    });\n\n    // fire the first update to position the popper in the right place\n    this.update();\n\n    const eventsEnabled = this.options.eventsEnabled;\n    if (eventsEnabled) {\n      // setup event listeners, they will take care of update the position in specific situations\n      this.enableEventListeners();\n    }\n\n    this.state.eventsEnabled = eventsEnabled;\n  }\n\n  // We can't use class properties because they don't get listed in the\n  // class prototype and break stuff like Sinon stubs\n  update() {\n    return update.call(this);\n  }\n  destroy() {\n    return destroy.call(this);\n  }\n  enableEventListeners() {\n    return enableEventListeners.call(this);\n  }\n  disableEventListeners() {\n    return disableEventListeners.call(this);\n  }\n\n  /**\n   * Schedules an update. It will run on the next UI update available.\n   * @method scheduleUpdate\n   * @memberof Popper\n   */\n  scheduleUpdate = () => requestAnimationFrame(this.update);\n\n  /**\n   * Collection of utilities useful when writing custom modifiers.\n   * Starting from version 1.7, this method is available only if you\n   * include `popper-utils.js` before `popper.js`.\n   *\n   * **DEPRECATION**: This way to access PopperUtils is deprecated\n   * and will be removed in v2! Use the PopperUtils module directly instead.\n   * Due to the high instability of the methods contained in Utils, we can't\n   * guarantee them to follow semver. Use them at your own risk!\n   * @static\n   * @private\n   * @type {Object}\n   * @deprecated since version 1.8\n   * @member Utils\n   * @memberof Popper\n   */\n  static Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;\n\n  static placements = placements;\n\n  static Defaults = Defaults;\n}\n\n/**\n * The `referenceObject` is an object that provides an interface compatible with Popper.js\n * and lets you use it as replacement of a real DOM node.<br />\n * You can use this method to position a popper relatively to a set of coordinates\n * in case you don't have a DOM node to use as reference.\n *\n * ```\n * new Popper(referenceObject, popperNode);\n * ```\n *\n * NB: This feature isn't supported in Internet Explorer 10.\n * @name referenceObject\n * @property {Function} data.getBoundingClientRect\n * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.\n * @property {number} data.clientWidth\n * An ES6 getter that will return the width of the virtual reference element.\n * @property {number} data.clientHeight\n * An ES6 getter that will return the height of the virtual reference element.\n */\n","'use strict';\n\nexports.__esModule = true;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _implementation = require('./implementation');\n\nvar _implementation2 = _interopRequireDefault(_implementation);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _react2.default.createContext || _implementation2.default;\nmodule.exports = exports['default'];","'use strict';\n\nexports.__esModule = true;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _gud = require('gud');\n\nvar _gud2 = _interopRequireDefault(_gud);\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar MAX_SIGNED_31_BIT_INT = 1073741823;\n\n// Inlined Object.is polyfill.\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\nfunction objectIs(x, y) {\n  if (x === y) {\n    return x !== 0 || 1 / x === 1 / y;\n  } else {\n    return x !== x && y !== y;\n  }\n}\n\nfunction createEventEmitter(value) {\n  var handlers = [];\n  return {\n    on: function on(handler) {\n      handlers.push(handler);\n    },\n    off: function off(handler) {\n      handlers = handlers.filter(function (h) {\n        return h !== handler;\n      });\n    },\n    get: function get() {\n      return value;\n    },\n    set: function set(newValue, changedBits) {\n      value = newValue;\n      handlers.forEach(function (handler) {\n        return handler(value, changedBits);\n      });\n    }\n  };\n}\n\nfunction onlyChild(children) {\n  return Array.isArray(children) ? children[0] : children;\n}\n\nfunction createReactContext(defaultValue, calculateChangedBits) {\n  var _Provider$childContex, _Consumer$contextType;\n\n  var contextProp = '__create-react-context-' + (0, _gud2.default)() + '__';\n\n  var Provider = function (_Component) {\n    _inherits(Provider, _Component);\n\n    function Provider() {\n      var _temp, _this, _ret;\n\n      _classCallCheck(this, Provider);\n\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return _ret = (_temp = (_this = _possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.emitter = createEventEmitter(_this.props.value), _temp), _possibleConstructorReturn(_this, _ret);\n    }\n\n    Provider.prototype.getChildContext = function getChildContext() {\n      var _ref;\n\n      return _ref = {}, _ref[contextProp] = this.emitter, _ref;\n    };\n\n    Provider.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n      if (this.props.value !== nextProps.value) {\n        var oldValue = this.props.value;\n        var newValue = nextProps.value;\n        var changedBits = void 0;\n\n        if (objectIs(oldValue, newValue)) {\n          changedBits = 0; // No change\n        } else {\n          changedBits = typeof calculateChangedBits === 'function' ? calculateChangedBits(oldValue, newValue) : MAX_SIGNED_31_BIT_INT;\n          if (process.env.NODE_ENV !== 'production') {\n            (0, _warning2.default)((changedBits & MAX_SIGNED_31_BIT_INT) === changedBits, 'calculateChangedBits: Expected the return value to be a ' + '31-bit integer. Instead received: %s', changedBits);\n          }\n\n          changedBits |= 0;\n\n          if (changedBits !== 0) {\n            this.emitter.set(nextProps.value, changedBits);\n          }\n        }\n      }\n    };\n\n    Provider.prototype.render = function render() {\n      return this.props.children;\n    };\n\n    return Provider;\n  }(_react.Component);\n\n  Provider.childContextTypes = (_Provider$childContex = {}, _Provider$childContex[contextProp] = _propTypes2.default.object.isRequired, _Provider$childContex);\n\n  var Consumer = function (_Component2) {\n    _inherits(Consumer, _Component2);\n\n    function Consumer() {\n      var _temp2, _this2, _ret2;\n\n      _classCallCheck(this, Consumer);\n\n      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      return _ret2 = (_temp2 = (_this2 = _possibleConstructorReturn(this, _Component2.call.apply(_Component2, [this].concat(args))), _this2), _this2.state = {\n        value: _this2.getValue()\n      }, _this2.onUpdate = function (newValue, changedBits) {\n        var observedBits = _this2.observedBits | 0;\n        if ((observedBits & changedBits) !== 0) {\n          _this2.setState({ value: _this2.getValue() });\n        }\n      }, _temp2), _possibleConstructorReturn(_this2, _ret2);\n    }\n\n    Consumer.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n      var observedBits = nextProps.observedBits;\n\n      this.observedBits = observedBits === undefined || observedBits === null ? MAX_SIGNED_31_BIT_INT // Subscribe to all changes by default\n      : observedBits;\n    };\n\n    Consumer.prototype.componentDidMount = function componentDidMount() {\n      if (this.context[contextProp]) {\n        this.context[contextProp].on(this.onUpdate);\n      }\n      var observedBits = this.props.observedBits;\n\n      this.observedBits = observedBits === undefined || observedBits === null ? MAX_SIGNED_31_BIT_INT // Subscribe to all changes by default\n      : observedBits;\n    };\n\n    Consumer.prototype.componentWillUnmount = function componentWillUnmount() {\n      if (this.context[contextProp]) {\n        this.context[contextProp].off(this.onUpdate);\n      }\n    };\n\n    Consumer.prototype.getValue = function getValue() {\n      if (this.context[contextProp]) {\n        return this.context[contextProp].get();\n      } else {\n        return defaultValue;\n      }\n    };\n\n    Consumer.prototype.render = function render() {\n      return onlyChild(this.props.children)(this.state.value);\n    };\n\n    return Consumer;\n  }(_react.Component);\n\n  Consumer.contextTypes = (_Consumer$contextType = {}, _Consumer$contextType[contextProp] = _propTypes2.default.object, _Consumer$contextType);\n\n\n  return {\n    Provider: Provider,\n    Consumer: Consumer\n  };\n}\n\nexports.default = createReactContext;\nmodule.exports = exports['default'];","import _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport * as React from 'react';\nimport createContext from 'create-react-context';\nexport var ManagerReferenceNodeContext = createContext();\nexport var ManagerReferenceNodeSetterContext = createContext();\n\nvar Manager =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Manager, _React$Component);\n\n  function Manager() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n\n    _defineProperty(_assertThisInitialized(_this), \"referenceNode\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"setReferenceNode\", function (newReferenceNode) {\n      if (newReferenceNode && _this.referenceNode !== newReferenceNode) {\n        _this.referenceNode = newReferenceNode;\n\n        _this.forceUpdate();\n      }\n    });\n\n    return _this;\n  }\n\n  var _proto = Manager.prototype;\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.referenceNode = null;\n  };\n\n  _proto.render = function render() {\n    return React.createElement(ManagerReferenceNodeContext.Provider, {\n      value: this.referenceNode\n    }, React.createElement(ManagerReferenceNodeSetterContext.Provider, {\n      value: this.setReferenceNode\n    }, this.props.children));\n  };\n\n  return Manager;\n}(React.Component);\n\nexport { Manager as default };","/**\n * Takes an argument and if it's an array, returns the first item in the array,\n * otherwise returns the argument. Used for Preact compatibility.\n */\nexport var unwrapArray = function unwrapArray(arg) {\n  return Array.isArray(arg) ? arg[0] : arg;\n};\n/**\n * Takes a maybe-undefined function and arbitrary args and invokes the function\n * only if it is defined.\n */\n\nexport var safeInvoke = function safeInvoke(fn) {\n  if (typeof fn === \"function\") {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return fn.apply(void 0, args);\n  }\n};\n/**\n * Does a shallow equality check of two objects by comparing the reference\n * equality of each value.\n */\n\nexport var shallowEqual = function shallowEqual(objA, objB) {\n  var aKeys = Object.keys(objA);\n  var bKeys = Object.keys(objB);\n\n  if (bKeys.length !== aKeys.length) {\n    return false;\n  }\n\n  for (var i = 0; i < bKeys.length; i++) {\n    var key = aKeys[i];\n\n    if (objA[key] !== objB[key]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Sets a ref using either a ref callback or a ref object\n */\n\nexport var setRef = function setRef(ref, node) {\n  // if its a function call it\n  if (typeof ref === \"function\") {\n    return safeInvoke(ref, node);\n  } // otherwise we should treat it as a ref object\n  else if (ref != null) {\n      ref.current = node;\n    }\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport * as React from 'react';\nimport PopperJS from 'popper.js';\nimport { ManagerReferenceNodeContext } from './Manager';\nimport { unwrapArray, setRef, shallowEqual } from './utils';\nvar initialStyle = {\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  opacity: 0,\n  pointerEvents: 'none'\n};\nvar initialArrowStyle = {};\nexport var InnerPopper =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(InnerPopper, _React$Component);\n\n  function InnerPopper() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      data: undefined,\n      placement: undefined\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"popperInstance\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"popperNode\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"arrowNode\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"setPopperNode\", function (popperNode) {\n      if (!popperNode || _this.popperNode === popperNode) return;\n      setRef(_this.props.innerRef, popperNode);\n      _this.popperNode = popperNode;\n\n      _this.updatePopperInstance();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setArrowNode\", function (arrowNode) {\n      _this.arrowNode = arrowNode;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updateStateModifier\", {\n      enabled: true,\n      order: 900,\n      fn: function fn(data) {\n        var placement = data.placement;\n\n        _this.setState({\n          data: data,\n          placement: placement\n        });\n\n        return data;\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getOptions\", function () {\n      return {\n        placement: _this.props.placement,\n        eventsEnabled: _this.props.eventsEnabled,\n        positionFixed: _this.props.positionFixed,\n        modifiers: _extends({}, _this.props.modifiers, {\n          arrow: _extends({}, _this.props.modifiers && _this.props.modifiers.arrow, {\n            enabled: !!_this.arrowNode,\n            element: _this.arrowNode\n          }),\n          applyStyle: {\n            enabled: false\n          },\n          updateStateModifier: _this.updateStateModifier\n        })\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getPopperStyle\", function () {\n      return !_this.popperNode || !_this.state.data ? initialStyle : _extends({\n        position: _this.state.data.offsets.popper.position\n      }, _this.state.data.styles);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getPopperPlacement\", function () {\n      return !_this.state.data ? undefined : _this.state.placement;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getArrowStyle\", function () {\n      return !_this.arrowNode || !_this.state.data ? initialArrowStyle : _this.state.data.arrowStyles;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getOutOfBoundariesState\", function () {\n      return _this.state.data ? _this.state.data.hide : undefined;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"destroyPopperInstance\", function () {\n      if (!_this.popperInstance) return;\n\n      _this.popperInstance.destroy();\n\n      _this.popperInstance = null;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updatePopperInstance\", function () {\n      _this.destroyPopperInstance();\n\n      var _assertThisInitialize = _assertThisInitialized(_this),\n          popperNode = _assertThisInitialize.popperNode;\n\n      var referenceElement = _this.props.referenceElement;\n      if (!referenceElement || !popperNode) return;\n      _this.popperInstance = new PopperJS(referenceElement, popperNode, _this.getOptions());\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"scheduleUpdate\", function () {\n      if (_this.popperInstance) {\n        _this.popperInstance.scheduleUpdate();\n      }\n    });\n\n    return _this;\n  }\n\n  var _proto = InnerPopper.prototype;\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {\n    // If the Popper.js options have changed, update the instance (destroy + create)\n    if (this.props.placement !== prevProps.placement || this.props.referenceElement !== prevProps.referenceElement || this.props.positionFixed !== prevProps.positionFixed || this.props.modifiers !== prevProps.modifiers) {\n      // develop only check that modifiers isn't being updated needlessly\n      if (process.env.NODE_ENV === \"development\") {\n        if (this.props.modifiers !== prevProps.modifiers && this.props.modifiers != null && prevProps.modifiers != null && shallowEqual(this.props.modifiers, prevProps.modifiers)) {\n          console.warn(\"'modifiers' prop reference updated even though all values appear the same.\\nConsider memoizing the 'modifiers' object to avoid needless rendering.\");\n        }\n      }\n\n      this.updatePopperInstance();\n    } else if (this.props.eventsEnabled !== prevProps.eventsEnabled && this.popperInstance) {\n      this.props.eventsEnabled ? this.popperInstance.enableEventListeners() : this.popperInstance.disableEventListeners();\n    } // A placement difference in state means popper determined a new placement\n    // apart from the props value. By the time the popper element is rendered with\n    // the new position Popper has already measured it, if the place change triggers\n    // a size change it will result in a misaligned popper. So we schedule an update to be sure.\n\n\n    if (prevState.placement !== this.state.placement) {\n      this.scheduleUpdate();\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    setRef(this.props.innerRef, null);\n    this.destroyPopperInstance();\n  };\n\n  _proto.render = function render() {\n    return unwrapArray(this.props.children)({\n      ref: this.setPopperNode,\n      style: this.getPopperStyle(),\n      placement: this.getPopperPlacement(),\n      outOfBoundaries: this.getOutOfBoundariesState(),\n      scheduleUpdate: this.scheduleUpdate,\n      arrowProps: {\n        ref: this.setArrowNode,\n        style: this.getArrowStyle()\n      }\n    });\n  };\n\n  return InnerPopper;\n}(React.Component);\n\n_defineProperty(InnerPopper, \"defaultProps\", {\n  placement: 'bottom',\n  eventsEnabled: true,\n  referenceElement: undefined,\n  positionFixed: false\n});\n\nvar placements = PopperJS.placements;\nexport { placements };\nexport default function Popper(_ref) {\n  var referenceElement = _ref.referenceElement,\n      props = _objectWithoutPropertiesLoose(_ref, [\"referenceElement\"]);\n\n  return React.createElement(ManagerReferenceNodeContext.Consumer, null, function (referenceNode) {\n    return React.createElement(InnerPopper, _extends({\n      referenceElement: referenceElement !== undefined ? referenceElement : referenceNode\n    }, props));\n  });\n}","import { __assign, __extends } from \"tslib\";\nimport React from 'react';\nimport memoizeOne from 'memoize-one';\nimport { Popper as ReactPopper, } from 'react-popper';\nexport { Manager, Reference } from 'react-popper';\nvar FlipBehavior = {\n    auto: [],\n    top: ['top', 'bottom', 'top'],\n    right: ['right', 'left', 'right'],\n    bottom: ['bottom', 'top', 'bottom'],\n    left: ['left', 'right', 'left'],\n};\nvar getFlipBehavior = function (side) { return FlipBehavior[side]; };\nvar Popper = /** @class */ (function (_super) {\n    __extends(Popper, _super);\n    function Popper() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.getModifiers = memoizeOne(function (placement) {\n            var flipBehavior = getFlipBehavior(placement.split('-')[0]);\n            var modifiers = {\n                flip: {\n                    enabled: true,\n                    behavior: flipBehavior,\n                    boundariesElement: 'viewport',\n                },\n                hide: {\n                    enabled: true,\n                },\n                offset: {\n                    enabled: true,\n                    offset: _this.props.offset,\n                },\n                preventOverflow: {\n                    enabled: true,\n                    escapeWithReference: false,\n                    boundariesElement: 'window',\n                },\n            };\n            if (_this.props.modifiers) {\n                return __assign(__assign({}, modifiers), _this.props.modifiers);\n            }\n            return modifiers;\n        });\n        return _this;\n    }\n    Popper.prototype.render = function () {\n        var _a = this.props, placement = _a.placement, children = _a.children, referenceElement = _a.referenceElement;\n        var modifiers = this.getModifiers(this.props.placement);\n        return (React.createElement(ReactPopper, __assign({ positionFixed: true, modifiers: modifiers, placement: placement }, (referenceElement ? { referenceElement: referenceElement } : {})), children));\n    };\n    Popper.defaultProps = {\n        children: function () { return null; },\n        offset: '0, 8px',\n        placement: 'bottom-start',\n    };\n    return Popper;\n}(React.Component));\nexport { Popper };\n//# sourceMappingURL=Popper.js.map","import _extends from \"@babel/runtime/helpers/extends\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport * as React from 'react';\nimport warning from 'warning';\nimport { ManagerReferenceNodeSetterContext } from './Manager';\nimport { safeInvoke, unwrapArray, setRef } from './utils';\n\nvar InnerReference =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(InnerReference, _React$Component);\n\n  function InnerReference() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n\n    _defineProperty(_assertThisInitialized(_this), \"refHandler\", function (node) {\n      setRef(_this.props.innerRef, node);\n      safeInvoke(_this.props.setReferenceNode, node);\n    });\n\n    return _this;\n  }\n\n  var _proto = InnerReference.prototype;\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    setRef(this.props.innerRef, null);\n  };\n\n  _proto.render = function render() {\n    warning(Boolean(this.props.setReferenceNode), '`Reference` should not be used outside of a `Manager` component.');\n    return unwrapArray(this.props.children)({\n      ref: this.refHandler\n    });\n  };\n\n  return InnerReference;\n}(React.Component);\n\nexport default function Reference(props) {\n  return React.createElement(ManagerReferenceNodeSetterContext.Consumer, null, function (setReferenceNode) {\n    return React.createElement(InnerReference, _extends({\n      setReferenceNode: setReferenceNode\n    }, props));\n  });\n}","import { __makeTemplateObject } from \"tslib\";\nimport styled from 'styled-components';\nimport { themed } from '@atlaskit/theme/components';\nimport { borderRadius, gridSize, layers } from '@atlaskit/theme/constants';\nimport { N0, DN50, N900, DN600 } from '@atlaskit/theme/colors';\nimport { multiply } from '@atlaskit/theme/math';\nimport { e200 } from '@atlaskit/theme/elevation';\nvar backgroundColor = themed({ light: N0, dark: DN50 });\nvar textColor = themed({ light: N900, dark: DN600 });\n// eslint-disable-next-line import/prefer-default-export\nexport var Container = styled.div(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n  background: \", \";\\n  border-radius: \", \"px;\\n  box-sizing: content-box; /* do not set this to border-box or it will break the overflow handling */\\n  color: \", \";\\n  max-height: \", \"px;\\n  max-width: \", \"px;\\n  padding: \", \"px \", \"px;\\n  z-index: \", \";\\n\\n  \", \";\\n\\n  &:focus {\\n    outline: none;\\n  }\\n\"], [\"\\n  background: \", \";\\n  border-radius: \", \"px;\\n  box-sizing: content-box; /* do not set this to border-box or it will break the overflow handling */\\n  color: \", \";\\n  max-height: \", \"px;\\n  max-width: \", \"px;\\n  padding: \", \"px \", \"px;\\n  z-index: \", \";\\n\\n  \", \";\\n\\n  &:focus {\\n    outline: none;\\n  }\\n\"])), backgroundColor, borderRadius, textColor, multiply(gridSize, 56), multiply(gridSize, 56), multiply(gridSize, 2), multiply(gridSize, 3), layers.dialog, e200);\nvar templateObject_1;\n//# sourceMappingURL=styled.js.map","import { __extends } from \"tslib\";\nimport React, { Component } from 'react';\nimport { withAnalyticsEvents, withAnalyticsContext, createAndFireEvent, } from '@atlaskit/analytics-next';\nimport NodeResolver from 'react-node-resolver';\nimport { Manager, Reference, Popper } from '@atlaskit/popper';\nimport { name as packageName, version as packageVersion, } from '../version.json';\nimport { Container } from './styled';\nvar InlineDialog = /** @class */ (function (_super) {\n    __extends(InlineDialog, _super);\n    function InlineDialog() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.handleClickOutside = function (event) {\n            var _a = _this.props, isOpen = _a.isOpen, onClose = _a.onClose;\n            if (event.defaultPrevented)\n                return;\n            var container = _this.containerRef;\n            var trigger = _this.triggerRef;\n            var target = event.target;\n            // exit if we click outside but on the trigger — it can handle the clicks itself\n            if (trigger && trigger.contains(target))\n                return;\n            // call onClose if the click originated from outside the dialog\n            if (isOpen && container && !container.contains(target)) {\n                onClose && onClose({ isOpen: false, event: event });\n            }\n        };\n        return _this;\n    }\n    InlineDialog.prototype.componentDidUpdate = function (prevProps) {\n        if (typeof window === 'undefined')\n            return;\n        if (!prevProps.isOpen && this.props.isOpen) {\n            window.addEventListener('click', this.handleClickOutside, true);\n        }\n        else if (prevProps.isOpen && !this.props.isOpen) {\n            window.removeEventListener('click', this.handleClickOutside, true);\n        }\n    };\n    InlineDialog.prototype.componentDidMount = function () {\n        if (typeof window === 'undefined')\n            return;\n        if (this.props.isOpen) {\n            window.addEventListener('click', this.handleClickOutside, true);\n        }\n    };\n    InlineDialog.prototype.componentWillUnmount = function () {\n        if (typeof window === 'undefined')\n            return;\n        window.removeEventListener('click', this.handleClickOutside, true);\n    };\n    InlineDialog.prototype.render = function () {\n        var _this = this;\n        var _a = this.props, children = _a.children, placement = _a.placement, isOpen = _a.isOpen, content = _a.content, onContentBlur = _a.onContentBlur, onContentFocus = _a.onContentFocus, onContentClick = _a.onContentClick, testId = _a.testId;\n        var popper = isOpen ? (React.createElement(Popper, { placement: placement }, function (_a) {\n            var ref = _a.ref, style = _a.style;\n            return (React.createElement(Container, { onBlur: onContentBlur, onFocus: onContentFocus, onClick: onContentClick, innerRef: function (node) {\n                    _this.containerRef = node;\n                    if (typeof ref === 'function') {\n                        ref(node);\n                    }\n                    else {\n                        ref.current = node;\n                    }\n                }, style: style, \"data-testid\": testId }, content));\n        })) : null;\n        return (React.createElement(Manager, null,\n            React.createElement(Reference, null, function (_a) {\n                var ref = _a.ref;\n                return (React.createElement(NodeResolver, { innerRef: function (node) {\n                        _this.triggerRef = node;\n                        if (typeof ref === 'function') {\n                            ref(node);\n                        }\n                        else {\n                            ref.current = node;\n                        }\n                    } }, children));\n            }),\n            popper));\n    };\n    InlineDialog.defaultProps = {\n        isOpen: false,\n        onContentBlur: function () { },\n        onContentClick: function () { },\n        onContentFocus: function () { },\n        onClose: function () { },\n        placement: 'bottom-start',\n    };\n    return InlineDialog;\n}(Component));\nexport { InlineDialog as InlineDialogWithoutAnalytics };\nvar createAndFireEventOnAtlaskit = createAndFireEvent('atlaskit');\nexport default withAnalyticsContext({\n    componentName: 'inlineDialog',\n    packageName: packageName,\n    packageVersion: packageVersion,\n})(withAnalyticsEvents({\n    onClose: createAndFireEventOnAtlaskit({\n        action: 'closed',\n        actionSubject: 'inlineDialog',\n        attributes: {\n            componentName: 'inlineDialog',\n            packageName: packageName,\n            packageVersion: packageVersion,\n        },\n    }),\n})(InlineDialog));\n//# sourceMappingURL=index.js.map"],"sourceRoot":""}